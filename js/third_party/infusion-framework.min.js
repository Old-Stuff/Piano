
var fluid_1_5=fluid_1_5||{};var fluid=fluid||fluid_1_5;(function($,fluid){fluid.version="Infusion 1.5";fluid.Error=Error;fluid.environment={fluid:fluid};var globalObject=window||{};fluid.activityTracing=false;fluid.activityTrace=[];var activityParser=/(%\w+)/g;fluid.renderOneActivity=function(activity,nowhile){var togo=nowhile===true?[]:["    while "];var message=activity.message;var index=activityParser.lastIndex=0;while(true){var match=activityParser.exec(message);if(match){var key=match[1].substring(1);togo.push(message.substring(index,match.index));togo.push(activity.args[key]);index=activityParser.lastIndex;}
else{break;}}
if(index<message.length){togo.push(message.substring(index));}
return togo;};fluid.renderActivity=function(activityStack,renderer){renderer=renderer||fluid.renderOneActivity;return fluid.transform(activityStack,renderer);};fluid.getActivityStack=function(){var root=fluid.globalThreadLocal();if(!root.activityStack){root.activityStack=[];}
return root.activityStack;};fluid.describeActivity=fluid.getActivityStack;fluid.logActivity=function(activity){activity=activity||fluid.describeActivity();var rendered=fluid.renderActivity(activity).reverse();fluid.log("Current activity: ");fluid.each(rendered,function(args){fluid.doLog(args);});};fluid.pushActivity=function(type,message,args){var record={type:type,message:message,args:args,time:new Date().getTime()};if(fluid.activityTracing){fluid.activityTrace.push(record);}
if(fluid.passLogLevel(fluid.logLevel.TRACE)){fluid.doLog(fluid.renderOneActivity(record,true));}
var activityStack=fluid.getActivityStack();activityStack.push(record);};fluid.popActivity=function(popframes){popframes=popframes||1;if(fluid.activityTracing){fluid.activityTrace.push({pop:popframes});}
var activityStack=fluid.getActivityStack();var popped=activityStack.length-popframes;activityStack.length=popped<0?0:popped;};fluid.FluidError=function(message){this.message=message;this.stack=new Error().stack;};fluid.FluidError.prototype=new Error();fluid.builtinFail=function(soft,args,activity){fluid.log.apply(null,[fluid.logLevel.FAIL,"ASSERTION FAILED: "].concat(args));fluid.logActivity(activity);var message=args.join("");if(soft){throw new fluid.FluidError(message);}else{message["Assertion failure - check console for details"]();}};var softFailure=[false];fluid.fail=function(message){var args=fluid.makeArray(arguments);var activity=fluid.makeArray(fluid.describeActivity());fluid.popActivity(activity.length);var topFailure=softFailure[0];if(typeof(topFailure)==="boolean"){fluid.builtinFail(topFailure,args,activity);}else if(typeof(topFailure)==="function"){topFailure(args,activity);}};fluid.pushSoftFailure=function(condition){if(typeof(condition)==="boolean"||typeof(condition)==="function"){softFailure.unshift(condition);}else if(condition===-1){softFailure.shift();}};fluid.notrycatch=true;fluid.tryCatch=function(tryfun,catchfun,finallyfun){finallyfun=finallyfun||fluid.identity;if(fluid.notrycatch){var togo=tryfun();finallyfun();return togo;}else{try{return tryfun();}catch(e){if(catchfun){catchfun(e);}else{throw(e);}}finally{finallyfun();}}};fluid.expect=function(name,members,target){fluid.transform(fluid.makeArray(members),function(key){if(typeof target[key]==="undefined"){fluid.fail(name+" missing required parameter "+key);}});};fluid.isLogging=function(){return logLevelStack[0].priority>fluid.logLevel.IMPORTANT.priority;};fluid.isLogLevel=function(arg){return fluid.isMarker(arg)&&arg.priority!==undefined;};fluid.passLogLevel=function(testLogLevel){return testLogLevel.priority<=logLevelStack[0].priority;};fluid.setLogging=function(enabled){var logLevel;if(typeof enabled==="boolean"){logLevel=fluid.logLevel[enabled?"INFO":"IMPORTANT"];}else if(fluid.isLogLevel(enabled)){logLevel=enabled;}else{fluid.fail("Unrecognised fluid logging level ",enabled);}
logLevelStack.unshift(logLevel);};fluid.setLogLevel=fluid.setLogging;fluid.popLogging=function(){return logLevelStack.length===1?logLevelStack[0]:logLevelStack.shift();};fluid.doLog=function(args){var str=args.join("");if(typeof(console)!=="undefined"){if(console.debug){console.debug.apply(console,args);}else if(typeof(console.log)==="function"){console.log.apply(console,args);}else{console.log(str);}}else if(typeof(YAHOO)!=="undefined"){YAHOO.log(str);}else if(typeof(opera)!=="undefined"){opera.postError(str);}};fluid.log=function(message){var directArgs=fluid.makeArray(arguments);var userLogLevel=fluid.logLevel.INFO;if(fluid.isLogLevel(directArgs[0])){userLogLevel=directArgs.shift();}
if(fluid.passLogLevel(userLogLevel)){var arg0=fluid.renderTimestamp(new Date())+":  ";var args=[arg0].concat(directArgs);fluid.doLog(args);}};fluid.identity=function(arg){return arg;};fluid.isValue=function(value){return value!==undefined&&value!==null;};fluid.isPrimitive=function(value){var valueType=typeof(value);return!value||valueType==="string"||valueType==="boolean"||valueType==="number"||valueType==="function";};fluid.isArrayable=function(totest){return totest&&(totest.jquery||Object.prototype.toString.call(totest)==="[object Array]");};fluid.isDOMNode=function(obj){return obj&&typeof(obj.nodeType)==="number";};fluid.freshContainer=function(tocopy){return fluid.isArrayable(tocopy)?[]:{};};fluid.copy=function(tocopy){if(fluid.isPrimitive(tocopy)){return tocopy;}
return $.extend(true,fluid.freshContainer(tocopy),tocopy);};fluid.makeArray=function(arg){var togo=[];if(arg!==null&&arg!==undefined){if(fluid.isPrimitive(arg)||typeof(arg.length)!=="number"){togo.push(arg);}
else{for(var i=0;i<arg.length;++i){togo[i]=arg[i];}}}
return togo;};function transformInternal(source,togo,key,args){var transit=source[key];for(var j=0;j<args.length-1;++j){transit=args[j+1](transit,key);}
togo[key]=transit;}
fluid.transform=function(source){var togo=fluid.freshContainer(source);if(fluid.isArrayable(source)){for(var i=0;i<source.length;++i){transformInternal(source,togo,i,arguments);}}else{for(var key in source){transformInternal(source,togo,key,arguments);}}
return togo;};fluid.each=function(source,func){if(fluid.isArrayable(source)){for(var i=0;i<source.length;++i){func(source[i],i);}}else{for(var key in source){func(source[key],key);}}};fluid.make_find=function(find_if){var target=find_if?false:undefined;return function(source,func,deffolt){var disp;if(fluid.isArrayable(source)){for(var i=0;i<source.length;++i){disp=func(source[i],i);if(disp!==target){return find_if?source[i]:disp;}}}else{for(var key in source){disp=func(source[key],key);if(disp!==target){return find_if?source[key]:disp;}}}
return deffolt;};};fluid.find=fluid.make_find(false);fluid.find_if=fluid.make_find(true);fluid.accumulate=function(list,fn,arg){for(var i=0;i<list.length;++i){arg=fn(list[i],arg,i);}
return arg;};fluid.remove_if=function(source,fn,target){if(fluid.isArrayable(source)){for(var i=0;i<source.length;++i){if(fn(source[i],i)){if(target){target.push(source[i]);}
source.splice(i,1);--i;}}}else{for(var key in source){if(fn(source[key],key)){if(target){target[key]=source[key];}
delete source[key];}}}
return target||source;};fluid.generate=function(n,generator,applyFunc){var togo=[];for(var i=0;i<n;++i){togo[i]=applyFunc?generator(i):generator;}
return togo;};fluid.filterKeys=function(toFilter,keys,exclude){return fluid.remove_if($.extend({},toFilter),function(value,key){return exclude^($.inArray(key,keys)===-1);});};fluid.censorKeys=function(toCensor,keys){return fluid.filterKeys(toCensor,keys,true);};fluid.makeFlatten=function(index){return function(obj){var togo=[];fluid.each(obj,function(){togo.push(arguments[index]);});return togo;};};fluid.keys=fluid.makeFlatten(1);fluid.values=fluid.makeFlatten(0);fluid.contains=function(obj,value){return obj?fluid.find(obj,function(thisValue){if(value===thisValue){return true;}}):undefined;};fluid.keyForValue=function(obj,value){return fluid.find(obj,function(thisValue,key){if(value===thisValue){return key;}});};fluid.findKeyInObject=fluid.keyForValue;fluid.arrayToHash=function(array){var togo={};fluid.each(array,function(el){togo[el]=true;});return togo;};fluid.clear=function(target){if(fluid.isArrayable(target)){target.length=0;}else{for(var i in target){delete target[i];}}};fluid.compareStringLength=function(ascending){return ascending?function(a,b){return a.length-b.length;}:function(a,b){return b.length-a.length;};};fluid.logLevelsSpec={"FATAL":0,"FAIL":5,"WARN":10,"IMPORTANT":12,"INFO":15,"TRACE":20};fluid.logLevel=fluid.transform(fluid.logLevelsSpec,function(value,key){return{type:"fluid.marker",value:key,priority:value};});var logLevelStack=[fluid.logLevel.IMPORTANT];fluid.VALUE={type:"fluid.marker",value:"VALUE"};fluid.NO_VALUE={type:"fluid.marker",value:"NO_VALUE"};fluid.EXPAND={type:"fluid.marker",value:"EXPAND"};fluid.EXPAND_NOW={type:"fluid.marker",value:"EXPAND_NOW"};fluid.isMarker=function(totest,type){if(!totest||typeof(totest)!=='object'||totest.type!=="fluid.marker"){return false;}
if(!type){return true;}
return totest===type;};fluid.model={};fluid.model.copyModel=function(target,source){fluid.clear(target);$.extend(true,target,source);};fluid.model.parseEL=function(EL){return EL===""?[]:String(EL).split('.');};fluid.model.composePath=function(prefix,suffix){return prefix===""?suffix:(suffix===""?prefix:prefix+"."+suffix);};fluid.model.composeSegments=function(){return fluid.makeArray(arguments).join(".");};fluid.path=fluid.model.composeSegments;fluid.composePath=fluid.model.composePath;fluid.requireDataBinding=function(){fluid.fail("Please include DataBinding.js in order to operate complex model accessor configuration");};fluid.model.setWithStrategy=fluid.model.getWithStrategy=fluid.requireDataBinding;fluid.model.resolvePathSegment=function(root,segment,create,origEnv){if(!origEnv&&root.resolvePathSegment){return root.resolvePathSegment(segment);}
if(create&&root[segment]===undefined){return root[segment]={};}
return root[segment];};fluid.model.pathToSegments=function(EL,config){var parser=config&&config.parser?config.parser.parse:fluid.model.parseEL;var segs=typeof(EL)==="number"||typeof(EL)==="string"?parser(EL):EL;return segs;};fluid.model.accessImpl=function(root,EL,newValue,config,initSegs,returnSegs,traverser){var segs=fluid.model.pathToSegments(EL,config);var initPos=0;if(initSegs){initPos=initSegs.length;segs=initSegs.concat(segs);}
var uncess=newValue===fluid.NO_VALUE?0:1;var root=traverser(root,segs,initPos,config,uncess);if(newValue===fluid.NO_VALUE||newValue===fluid.VALUE){return returnSegs?{root:root,segs:segs}:root;}
else{root[segs[segs.length-1]]=newValue;}};fluid.model.accessSimple=function(root,EL,newValue,environment,initSegs,returnSegs){return fluid.model.accessImpl(root,EL,newValue,environment,initSegs,returnSegs,fluid.model.traverseSimple);};fluid.model.traverseSimple=function(root,segs,initPos,environment,uncess){var origEnv=environment;var limit=segs.length-uncess;for(var i=0;i<limit;++i){if(!root){return root;}
var segment=segs[i];if(environment&&environment[segment]){root=environment[segment];}else{root=fluid.model.resolvePathSegment(root,segment,uncess===1,origEnv);}
environment=null;}
return root;};fluid.model.setSimple=function(root,EL,newValue,environment,initSegs){fluid.model.accessSimple(root,EL,newValue,environment,initSegs,false);};fluid.model.getSimple=function(root,EL,environment,initSegs){if(EL===null||EL===undefined||EL.length===0){return root;}
return fluid.model.accessSimple(root,EL,fluid.NO_VALUE,environment,initSegs,false);};fluid.decodeAccessorArg=function(arg3){return(!arg3||arg3===fluid.model.defaultGetConfig||arg3===fluid.model.defaultSetConfig)?null:(arg3.type==="environment"?arg3.value:undefined);};fluid.set=function(root,EL,newValue,config,initSegs){var env=fluid.decodeAccessorArg(config);if(env===undefined){fluid.model.setWithStrategy(root,EL,newValue,config,initSegs);}else{fluid.model.setSimple(root,EL,newValue,env,initSegs);}};fluid.get=function(root,EL,config,initSegs){var env=fluid.decodeAccessorArg(config);return env===undefined?fluid.model.getWithStrategy(root,EL,config,initSegs):fluid.model.accessImpl(root,EL,fluid.NO_VALUE,env,null,false,fluid.model.traverseSimple);};fluid.model.setBeanValue=fluid.set;fluid.model.getBeanValue=fluid.get;fluid.getGlobalValue=function(path,env){if(path){env=env||fluid.environment;return fluid.get(globalObject,path,{type:"environment",value:env});}};fluid.bind=function(obj,fnName,args){return obj[fnName].apply(obj,fluid.makeArray(args));}
fluid.invokeGlobalFunction=function(functionPath,args,environment){var func=fluid.getGlobalValue(functionPath,environment);if(!func){fluid.fail("Error invoking global function: "+functionPath+" could not be located");}else{return func.apply(null,args||[]);}};fluid.registerGlobalFunction=function(functionPath,func,env){env=env||fluid.environment;fluid.set(globalObject,functionPath,func,{type:"environment",value:env});};fluid.setGlobalValue=fluid.registerGlobalFunction;fluid.registerNamespace=function(naimspace,env){env=env||fluid.environment;var existing=fluid.getGlobalValue(naimspace,env);if(!existing){existing={};fluid.setGlobalValue(naimspace,existing,env);}
return existing;};fluid.dumpEl=fluid.identity;fluid.renderTimestamp=fluid.identity;fluid.registerNamespace("fluid.event");fluid.generateUniquePrefix=function(){return(Math.floor(Math.random()*1e12)).toString(36)+"-";};var fluid_prefix=fluid.generateUniquePrefix();var fluid_guid=1;fluid.allocateGuid=function(){return fluid_prefix+(fluid_guid++);};fluid.event.identifyListener=function(listener){if(!listener.$$fluid_guid){listener.$$fluid_guid=fluid.allocateGuid();}
return listener.$$fluid_guid;};fluid.event.impersonateListener=function(origListener,newListener){fluid.event.identifyListener(origListener);newListener.$$fluid_guid=origListener.$$fluid_guid;};fluid.event.mapPriority=function(priority,count){return(priority===null||priority===undefined?count:(priority==="last"?Number.MAX_VALUE:(priority==="first"?-Number.MAX_VALUE:-priority)));};fluid.priorityComparator=function(recA,recB){return recA.priority-recB.priority;};fluid.event.sortListeners=function(listeners){var togo=[];fluid.each(listeners,function(listener){togo.push(listener);});return togo.sort(fluid.priorityComparator);};fluid.event.resolveListener=function(listener){if(listener.globalName){var listenerFunc=fluid.getGlobalValue(listener.globalName);if(!listenerFunc){fluid.fail("Unable to look up name "+listener.globalName+" as a global function");}else{listener=listenerFunc;}}
return listener;};fluid.event.nameEvent=function(that,eventName){return eventName+" of "+fluid.nameComponent(that);};fluid.makeEventFirer=function(unicast,preventable,name){var listeners;var byId;var sortedListeners;function fireToListeners(listeners,args,wrapper){if(!listeners){return;}
fluid.log("Firing event "+name+" to list of "+listeners.length+" listeners");for(var i=0;i<listeners.length;++i){var lisrec=listeners[i];lisrec.listener=fluid.event.resolveListener(lisrec.listener);var listener=lisrec.listener;if(lisrec.predicate&&!lisrec.predicate(listener,args)){continue;}
var value;var ret=(wrapper?wrapper(listener):listener).apply(null,args);if(preventable&&ret===false){value=false;}
if(unicast){value=ret;}
if(value!==undefined){return value;}}}
var identify=fluid.event.identifyListener;var that;var lazyInit=function(){listeners={};byId={};sortedListeners=[];that.addListener=function(listener,namespace,predicate,priority){if(!listener){return;}
if(unicast){namespace="unicast";}
if(typeof(listener)==="string"){listener={globalName:listener};}
var id=identify(listener);namespace=namespace||id;var record={listener:listener,predicate:predicate,namespace:namespace,priority:fluid.event.mapPriority(priority,sortedListeners.length)};listeners[namespace]=byId[id]=record;sortedListeners=fluid.event.sortListeners(listeners);};that.addListener.apply(null,arguments);};that={name:name,typeName:"fluid.event.firer",addListener:function(){lazyInit.apply(null,arguments);},removeListener:function(listener){if(!listeners){return;}
var namespace;if(typeof(listener)==="string"){namespace=listener;var record=listeners[listener];if(!record){return;}
listener=record.listener;}
var id=identify(listener);if(!id){fluid.fail("Cannot remove unregistered listener function ",listener," from event "+that.name);}
namespace=namespace||(byId[id]&&byId[id].namespace)||id;delete byId[id];delete listeners[namespace];sortedListeners=fluid.event.sortListeners(listeners);},fireToListeners:function(listeners,args,wrapper){return fireToListeners(listeners,args,wrapper);},fire:function(){return fireToListeners(sortedListeners,arguments);}};return that;};fluid.event.getEventFirer=fluid.makeEventFirer;fluid.fireEvent=function(component,path,args){var firer=fluid.get(component,path);if(firer){firer.fire.apply(null,fluid.makeArray(args));}};fluid.event.addListenerToFirer=function(firer,value,namespace,wrapper){wrapper=wrapper||fluid.identity;if(fluid.isArrayable(value)){for(var i=0;i<value.length;++i){fluid.event.addListenerToFirer(firer,value[i],namespace,wrapper);}}else if(typeof(value)==="function"||typeof(value)==="string"){wrapper(firer).addListener(value,namespace);}else if(value&&typeof(value)==="object"){wrapper(firer).addListener(value.listener,namespace||value.namespace,value.predicate,value.priority);}};fluid.event.resolveListenerRecord=function(records){return{records:records};};fluid.mergeListeners=function(that,events,listeners){fluid.each(listeners,function(value,key){var firer,namespace;if(key.charAt(0)==="{"){if(!fluid.expandOptions){fluid.fail("fluid.expandOptions could not be loaded - please include FluidIoC.js in order to operate IoC-driven event with descriptor "+
key);}
firer=fluid.expandOptions(key,that);if(!firer){fluid.fail("Error in listener record: key "+key+" could not be looked up to an event firer - did you miss out \"events.\" when referring to an event firer?");}}else{var keydot=key.indexOf(".");if(keydot!==-1){namespace=key.substring(keydot+1);key=key.substring(0,keydot);}
if(!events[key]){fluid.fail("Listener registered for event "+key+" which is not defined for this component");events[key]=fluid.makeEventFirer(null,null,fluid.event.nameEvent(that,key));}
firer=events[key];}
record=fluid.event.resolveListenerRecord(value,that,key);fluid.event.addListenerToFirer(firer,record.records,namespace,record.adderWrapper);});};fluid.eventFromRecord=function(eventSpec,eventKey,that){var isIoCEvent=eventSpec&&(typeof(eventSpec)!=="string"||eventSpec.charAt(0)==="{");var event;if(isIoCEvent){if(!fluid.event.resolveEvent){fluid.fail("fluid.event.resolveEvent could not be loaded - please include FluidIoC.js in order to operate IoC-driven event with descriptor ",eventSpec);}else{event=fluid.event.resolveEvent(that,eventKey,eventSpec);}}else{event=fluid.makeEventFirer(eventSpec==="unicast",eventSpec==="preventable",fluid.event.nameEvent(that,eventKey));}
return event;};fluid.instantiateFirers=function(that,options){fluid.each(options.events,function(eventSpec,eventKey){that.events[eventKey]=fluid.eventFromRecord(eventSpec,eventKey,that);});};fluid.mergeListenerPolicy=function(target,source,key){var hasNamespace=key.charAt(0)!=="{"&&key.indexOf(".")!==-1;return hasNamespace?(source?source:target):fluid.makeArray(target).concat(fluid.makeArray(source));};fluid.mergeListenersPolicy=function(target,source){target=target||{};fluid.each(source,function(listeners,key){target[key]=fluid.mergeListenerPolicy(target[key],listeners,key);});return target;};fluid.unique=function(array){return fluid.remove_if(array,function(element,i){return!element||i>0&&element===array[i-1];});};fluid.uniqueArrayConcatPolicy=function(target,source){target=(target||[]).concat(source);fluid.unique(target.sort());return target;};var defaultsStore={};var resolveGradesImpl=function(gs,gradeNames){gradeNames=fluid.makeArray(gradeNames);fluid.each(gradeNames,function(gradeName){if(!gs.gradeHash[gradeName]){var options=fluid.rawDefaults(gradeName)||{};gs.gradeHash[gradeName]=true;gs.gradeChain.push(gradeName);gs.optionsChain.push(options);var oGradeNames=fluid.makeArray(options.gradeNames);fluid.each(oGradeNames,function(gradeName){if(gradeName.charAt(0)!=="{"){resolveGradesImpl(gs,gradeName);}});}});return gs;};fluid.resolveGradeStructure=function(defaultName,gradeNames){var gradeStruct={gradeChain:[defaultName],gradeHash:{},optionsChain:[]};gradeStruct.gradeHash[defaultName]=true;return resolveGradesImpl(gradeStruct,gradeNames);};var mergedDefaultsCache={};fluid.gradeNamesToKey=function(gradeNames,defaultName){return defaultName+"|"+fluid.makeArray(gradeNames).sort().join("|");};fluid.resolveGrade=function(defaults,defaultName,gradeNames){var mergeArgs=[defaults];if(gradeNames){var gradeStruct=fluid.resolveGradeStructure(defaultName,gradeNames);mergeArgs=gradeStruct.optionsChain.reverse().concat(mergeArgs).concat({gradeNames:gradeStruct.gradeChain});}
var mergePolicy={};for(var i=0;i<mergeArgs.length;++i){if(mergeArgs[i]&&mergeArgs[i].mergePolicy){mergePolicy=$.extend(true,mergePolicy,mergeArgs[i].mergePolicy);}}
mergeArgs=[mergePolicy,{}].concat(mergeArgs);var mergedDefaults=fluid.merge.apply(null,mergeArgs);return mergedDefaults;};fluid.getGradedDefaults=function(defaults,defaultName,gradeNames){var key=fluid.gradeNamesToKey(gradeNames,defaultName);var mergedDefaults=mergedDefaultsCache[key];if(!mergedDefaults){mergedDefaults=mergedDefaultsCache[key]=fluid.resolveGrade(defaults,defaultName,gradeNames);}
return mergedDefaults;};fluid.resolveGradedOptions=function(componentName){var defaults=fluid.rawDefaults(componentName);if(!defaults){return defaults;}else{return fluid.getGradedDefaults(defaults,componentName,defaults.gradeNames);}};fluid.rawDefaults=function(componentName,options){if(options===undefined){return defaultsStore[componentName];}else{defaultsStore[componentName]=options;}};fluid.hasGrade=function(options,gradeName){return!options||!options.gradeNames?false:fluid.contains(options.gradeNames,gradeName);};fluid.defaults=function(componentName,options){if(options===undefined){return fluid.resolveGradedOptions(componentName);}
else{if(options&&options.options){fluid.fail("Probable error in options structure for "+componentName+" with option named \"options\" - perhaps you meant to write these options at top level in fluid.defaults? - ",options);}
fluid.rawDefaults(componentName,options);if(fluid.hasGrade(options,"autoInit")){fluid.makeComponent(componentName,fluid.resolveGradedOptions(componentName));}}};fluid.makeComponent=function(componentName,options){if(!options.initFunction||!options.gradeNames){fluid.fail("Cannot autoInit component "+componentName+" which does not have an initFunction and gradeNames defined");}
var creator=function(){return fluid.initComponent(componentName,arguments);};var existing=fluid.getGlobalValue(componentName);if(existing){$.extend(creator,existing);}
fluid.setGlobalValue(componentName,creator);};fluid.makeComponents=function(components,env){fluid.each(components,function(value,key){var options={gradeNames:fluid.makeArray(value).concat(["autoInit"])};fluid.defaults(key,options);});};fluid.defaults("fluid.function",{});fluid.lifecycleFunctions={preInitFunction:true,postInitFunction:true,finalInitFunction:true};fluid.rootMergePolicy=$.extend({gradeNames:fluid.uniqueArrayConcatPolicy,transformOptions:"replace"},fluid.transform(fluid.lifecycleFunctions,function(){return fluid.mergeListenerPolicy;}));fluid.defaults("fluid.littleComponent",{initFunction:"fluid.initLittleComponent",mergePolicy:fluid.rootMergePolicy,argumentMap:{options:0}});fluid.defaults("fluid.eventedComponent",{gradeNames:["fluid.littleComponent"],events:{onCreate:null,onAttach:null,onClear:null,onDestroy:null},mergePolicy:{listeners:fluid.mergeListenersPolicy}});fluid.preInitModelComponent=function(that){that.model=that.options.model||{};that.applier=that.options.applier||(fluid.makeChangeApplier?fluid.makeChangeApplier(that.model,that.options.changeApplierOptions):null);};fluid.defaults("fluid.modelComponent",{gradeNames:["fluid.littleComponent"],preInitFunction:{namespace:"preInitModelComponent",listener:"fluid.preInitModelComponent"},mergePolicy:{model:"preserve",applier:"nomerge"}});fluid.nameComponent=function(that){return that?"component with typename "+that.typeName+" and id "+that.id:"[unknown component]";};fluid.model.mergeModel=function(target,source){if(!fluid.isPrimitive(target)){var copySource=fluid.copy(source);$.extend(true,source,target);$.extend(true,source,copySource);}
return source;};var emptyPolicy={};fluid.derefMergePolicy=function(policy){return(policy?policy["*"]:emptyPolicy)||emptyPolicy;};fluid.compileMergePolicy=function(mergePolicy){var builtins={},defaultValues={};var togo={builtins:builtins,defaultValues:defaultValues};if(!mergePolicy){return togo;}
fluid.each(mergePolicy,function(value,key){var parsed={},builtin=false;if(typeof(value)==="function"){parsed.func=value;builtin=true;}
else if(!fluid.isDefaultValueMergePolicy(value)){var split=value.split(/\s*,\s*/);for(var i=0;i<split.length;++i){parsed[split[i]]=true;}
builtin=true;}
else{fluid.set(defaultValues,key,"{that}.options."+value);togo.hasDefaults=true;}
if(builtin){fluid.set(builtins,fluid.composePath(key,"*"),parsed);}});return togo;};fluid.isDefaultValueMergePolicy=function(policy){return typeof(policy)==="string"&&(policy.indexOf(",")===-1&&!/replace|preserve|nomerge|noexpand/.test(policy));};fluid.mergeOneImpl=function(thisTarget,thisSource,j,sources,newPolicy,i,segs){var togo=thisTarget;var primitiveTarget=fluid.isPrimitive(thisTarget);if(thisSource!==undefined){if(!newPolicy.func&&thisSource!==null&&typeof(thisSource)==="object"&&!fluid.isDOMNode(thisSource)&&!thisSource.jquery&&thisSource!==fluid.VALUE&&!newPolicy.preserve&&!newPolicy.nomerge){if(primitiveTarget){togo=thisTarget=fluid.freshContainer(thisSource);}}else{sources[j]=undefined;if(newPolicy.func){togo=newPolicy.func.call(null,thisTarget,thisSource,segs[i-1],segs,i);}else{togo=fluid.isValue(thisTarget)&&newPolicy.preserve?fluid.model.mergeModel(thisTarget,thisSource):thisSource;}}}
return togo;};function regenerateCursor(source,segs,limit,sourceStrategy){for(var i=0;i<limit;++i){source=sourceStrategy(source,segs[i],i,segs);}
return source;}
function regenerateSources(sources,segs,limit,sourceStrategies){var togo=[];for(var i=0;i<sources.length;++i){var thisSource=regenerateCursor(sources[i],segs,limit,sourceStrategies[i]);if(thisSource!==undefined){togo.push(thisSource);}}
return togo;}
fluid.fetchMergeChildren=function(target,i,segs,sources,mergePolicy,options){var thisPolicy=fluid.derefMergePolicy(mergePolicy);for(var j=sources.length-1;j>=0;--j){var source=sources[j];if(source!==undefined){fluid.each(source,function(newSource,name){if(!target.hasOwnProperty(name)){segs[i]=name;options.strategy(target,name,i+1,segs,sources,mergePolicy);}});if(thisPolicy.replace){break;}}}
return target;};fluid.inEvaluationMarker={"__CURRENTLY_IN_EVALUATION__":true};fluid.strategyRecursionBailout=50;fluid.makeMergeStrategy=function(options){var strategy=function(target,name,i,segs,sources,policy){if(i>fluid.strategyRecursionBailout){fluid.fail("Overflow/circularity in options merging, current path is ",segs," at depth ",i," - please protect components from merging using the \"nomerge\" merge policy");}
if(fluid.isTracing){fluid.tracing.pathCount.push(fluid.path(segs.slice(0,i)));}
var oldTarget=undefined;if(target.hasOwnProperty(name)){oldTarget=target[name];if(!options.evaluateFully){return oldTarget;}}
else{target[name]=fluid.inEvaluationMarker;}
if(sources===undefined){segs=fluid.makeArray(segs);sources=regenerateSources(options.sources,segs,i-1,options.sourceStrategies);policy=regenerateCursor(options.mergePolicy,segs,i-1,fluid.concreteTrundler);}
var newPolicyHolder=fluid.concreteTrundler(policy,name);var newPolicy=fluid.derefMergePolicy(newPolicyHolder);var start,limit,mul;if(newPolicy.replace){start=1-sources.length;limit=0;mul=-1;}
else{start=0;limit=sources.length-1;mul=+1;}
var newSources=[];var thisTarget=undefined;for(var j=start;j<=limit;++j){var k=mul*j;var thisSource=options.sourceStrategies[k](sources[k],name,i,segs);if(thisSource!==undefined){newSources[k]=thisSource;if(oldTarget===undefined){if(mul===-1){thisTarget=target[name]=thisSource;break;}
else{thisTarget=target[name]=fluid.mergeOneImpl(thisTarget,thisSource,j,newSources,newPolicy,i,segs,options);}}}}
if(oldTarget!==undefined){thisTarget=oldTarget;}
if(newSources.length>0){if(!fluid.isPrimitive(thisTarget)){fluid.fetchMergeChildren(thisTarget,i,segs,newSources,newPolicyHolder,options);}}
if(oldTarget===undefined&&newSources.length===0){delete target[name];}
return thisTarget;};options.strategy=strategy;return strategy;};fluid.driveStrategy=function(root,pathSegs,strategy){pathSegs=fluid.makeArray(pathSegs);for(var i=0;i<pathSegs.length;++i){if(!root){return undefined;}
root=strategy(root,pathSegs[i],i+1,pathSegs);}
return root;};fluid.concreteTrundler=function(source,seg){return!source?undefined:source[seg];};fluid.merge=function(policy){var sources=Array.prototype.slice.call(arguments,1);var compiled=fluid.compileMergePolicy(policy).builtins;var options=fluid.makeMergeOptions(compiled,sources,{});options.initter();return options.target;};fluid.simpleGingerBlock=function(source,recordType){var block={target:source,simple:true,strategy:fluid.concreteTrundler,initter:fluid.identity,recordType:recordType,priority:fluid.mergeRecordTypes[recordType]};return block;};fluid.makeMergeOptions=function(policy,sources,userOptions){var options={mergePolicy:policy,sources:sources,seenIds:{}};options=$.extend(options,userOptions);options.target=options.target||fluid.freshContainer(options.sources[0]);options.sourceStrategies=options.sourceStrategies||fluid.generate(options.sources.length,fluid.concreteTrundler);options.initter=function(){options.evaluateFully=true;fluid.fetchMergeChildren(options.target,0,[],options.sources,options.mergePolicy,options);};fluid.makeMergeStrategy(options);return options;};fluid.transformOptions=function(options,transRec){fluid.expect("Options transformation record",["transformer","config"],transRec);var transFunc=fluid.getGlobalValue(transRec.transformer);return transFunc.call(null,options,transRec.config);};fluid.findMergeBlocks=function(mergeBlocks,recordType){return fluid.remove_if(fluid.makeArray(mergeBlocks),function(block){return block.recordType!==recordType;});};fluid.transformOptionsBlocks=function(mergeBlocks,transformOptions,recordTypes){fluid.each(recordTypes,function(recordType){var blocks=fluid.findMergeBlocks(mergeBlocks,recordType);fluid.each(blocks,function(block){block[block.simple?"target":"source"]=fluid.transformOptions(block.source,transformOptions);});});};fluid.deliverOptionsStrategy=fluid.identity;fluid.computeComponentAccessor=fluid.identity;fluid.mergeRecordTypes={defaults:0,localOptions:50,defaultValueMerge:100,subcomponentRecord:200,distribution:300,user:500,demands:600};fluid.mergeComponentOptions=function(that,componentName,userOptions,localOptions){var defaults=fluid.defaults(componentName)||{};var sharedMergePolicy={};var mergeBlocks=[];var defaultGrades=defaults.gradeNames;if(!defaultGrades){mergeBlocks.push(fluid.simpleGingerBlock(fluid.copy(fluid.getGradedDefaults(defaults,componentName,localOptions.gradeNames),"localOptions")));}
if(fluid.expandComponentOptions){mergeBlocks=mergeBlocks.concat(fluid.expandComponentOptions(sharedMergePolicy,defaults,userOptions,that));}
else{mergeBlocks=mergeBlocks.concat([fluid.simpleGingerBlock(defaults,"defaults"),fluid.simpleGingerBlock(userOptions,"user")]);}
var options={};var sourceStrategies=[],sources=[];var baseMergeOptions={target:options,sourceStrategies:sourceStrategies};var updateBlocks=function(){mergeBlocks.sort(fluid.priorityComparator);sourceStrategies.length=0;sources.length=0;fluid.each(mergeBlocks,function(block){sourceStrategies.push(block.strategy);sources.push(block.target);});};updateBlocks();var mergeOptions=fluid.makeMergeOptions(sharedMergePolicy,sources,baseMergeOptions);mergeOptions.mergeBlocks=mergeBlocks;mergeOptions.updateBlocks=updateBlocks;var mergePolicy=fluid.driveStrategy(options,"mergePolicy",mergeOptions.strategy);mergePolicy=$.extend({},fluid.rootMergePolicy,mergePolicy);var compiledPolicy=fluid.compileMergePolicy(mergePolicy);$.extend(true,sharedMergePolicy,compiledPolicy.builtins);if(compiledPolicy.hasDefaults){if(fluid.generateExpandBlock){mergeBlocks.push(fluid.generateExpandBlock({options:compiledPolicy.defaultValues,recordType:"defaultValueMerge",priority:fluid.mergeRecordTypes.defaultValueMerge},that,{}));updateBlocks();}
else{fluid.fail("Cannot operate mergePolicy ",mergePolicy," for component ",that," without including FluidIoC.js");}}
that.options=options;var optionsNickName=fluid.driveStrategy(options,"nickName",mergeOptions.strategy);that.nickName=optionsNickName||fluid.computeNickName(that.typeName);fluid.driveStrategy(options,"gradeNames",mergeOptions.strategy);fluid.deliverOptionsStrategy(that,options,mergeOptions);var transformOptions=fluid.driveStrategy(options,"transformOptions",mergeOptions.strategy);if(transformOptions){fluid.transformOptionsBlocks(mergeBlocks,transformOptions,["user","subcomponentRecord"]);updateBlocks();}
fluid.computeComponentAccessor(that);return mergeOptions;};fluid.COMPONENT_OPTIONS={type:"fluid.marker",value:"COMPONENT_OPTIONS"};fluid.emptySubcomponent=function(options){var that=fluid.typeTag("fluid.emptySubcomponent");that.options=options||{};that.options.gradeNames=[that.typeName];options=fluid.makeArray(options);for(var i=0;i<options.length;++i){that[options[i]]=fluid.identity;}
return that;};fluid.computeNickName=function(typeName){var segs=fluid.model.parseEL(typeName);return segs[segs.length-1];};fluid.typeTag=function(name){return name?{typeName:name,id:fluid.allocateGuid()}:null;};fluid.typeFount=function(options){var that=fluid.initLittleComponent("fluid.typeFount",options);return fluid.typeTag(that.options.targetTypeName);};fluid.initLittleComponent=function(name,userOptions,localOptions,receiver){var that=fluid.typeTag(name);localOptions=localOptions||{gradeNames:"fluid.littleComponent"};var mergeOptions=fluid.mergeComponentOptions(that,name,userOptions,localOptions);var options=that.options;var evented=fluid.hasGrade(options,"fluid.eventedComponent");if(evented){that.events={};}
(receiver||fluid.identity)(that,options,mergeOptions.strategy);for(var i=0;i<mergeOptions.mergeBlocks.length;++i){mergeOptions.mergeBlocks[i].initter();}
mergeOptions.initter();delete options.mergePolicy;fluid.initLifecycleFunctions(that);fluid.fireEvent(options,"preInitFunction",that);if(evented){fluid.instantiateFirers(that,options);fluid.mergeListeners(that,that.events,options.listeners);}
if(!fluid.hasGrade(options,"autoInit")){fluid.clearLifecycleFunctions(options);}
return that;};fluid.updateWithDefaultLifecycle=function(key,value,typeName){var funcName=typeName+"."+key.substring(0,key.length-"function".length);var funcVal=fluid.getGlobalValue(funcName);if(typeof(funcVal)==="function"){value=fluid.makeArray(value);var existing=fluid.find(value,function(el){var listener=el.listener||el;if(listener===funcVal||listener===funcName){return true;}});if(!existing){value.push(funcVal);}}
return value;};fluid.initLifecycleFunctions=function(that){var gradeNames=that.options.gradeNames||[];fluid.each(fluid.lifecycleFunctions,function(func,key){var value=that.options[key];for(var i=gradeNames.length-1;i>=0;--i){if(gradeNames[i]!=="autoInit"){value=fluid.updateWithDefaultLifecycle(key,value,gradeNames[i]);}}
if(value){that.options[key]=fluid.makeEventFirer(null,null,key);fluid.event.addListenerToFirer(that.options[key],value);}});};fluid.clearLifecycleFunctions=function(options){fluid.each(fluid.lifecycleFunctions,function(value,key){delete options[key];});delete options.initFunction;};fluid.diagnoseFailedView=fluid.identity;fluid.makeRootDestroy=function(that){return function(){fluid.fireEvent(that,"events.onClear",[that,"",null]);fluid.fireEvent(that,"events.onDestroy",[that,"",null]);};};fluid.resolveReturnedPath=fluid.identity;fluid.initComponent=function(componentName,initArgs){var options=fluid.defaults(componentName);if(!options.gradeNames){fluid.fail("Cannot initialise component "+componentName+" which has no gradeName registered");}
var args=[componentName].concat(fluid.makeArray(initArgs));var that;fluid.pushActivity("initComponent","constructing component of type %componentName with arguments %initArgs",{componentName:componentName,initArgs:initArgs});that=fluid.invokeGlobalFunction(options.initFunction,args);fluid.diagnoseFailedView(componentName,that,options,args);fluid.fireEvent(that.options,"postInitFunction",that);if(fluid.initDependents){fluid.initDependents(that);}
fluid.fireEvent(that.options,"finalInitFunction",that);fluid.clearLifecycleFunctions(that.options);that.destroy=fluid.makeRootDestroy(that);fluid.fireEvent(that,"events.onCreate",that);fluid.popActivity();return fluid.resolveReturnedPath(that.options.returnedPath,that)?fluid.get(that,that.options.returnedPath):that;};fluid.initSubcomponentImpl=function(that,entry,args){var togo;if(typeof(entry)!=="function"){var entryType=typeof(entry)==="string"?entry:entry.type;togo=entryType==="fluid.emptySubcomponent"?fluid.emptySubcomponent(entry.options):fluid.invokeGlobalFunction(entryType,args);}else{togo=entry.apply(null,args);}
var returnedOptions=togo?togo.returnedOptions:null;if(returnedOptions&&returnedOptions.listeners){fluid.mergeListeners(that,that.events,returnedOptions.listeners);}
return togo;};fluid.initSubcomponents=function(that,className,args){var entry=that.options[className];if(!entry){return;}
var entries=fluid.makeArray(entry);var optindex=-1;var togo=[];args=fluid.makeArray(args);for(var i=0;i<args.length;++i){if(args[i]===fluid.COMPONENT_OPTIONS){optindex=i;}}
for(i=0;i<entries.length;++i){entry=entries[i];if(optindex!==-1){args[optindex]=entry.options;}
togo[i]=fluid.initSubcomponentImpl(that,entry,args);}
return togo;};fluid.initSubcomponent=function(that,className,args){return fluid.initSubcomponents(that,className,args)[0];};fluid.singleThreadLocal=function(initFunc){var value=initFunc();return function(newValue){return newValue===undefined?value:value=newValue;};};fluid.threadLocal=fluid.singleThreadLocal;fluid.globalThreadLocal=fluid.threadLocal(function(){return fluid.typeTag("fluid.dynamicEnvironment");});fluid.staticEnvironment=fluid.typeTag("fluid.staticEnvironment");var charStart="(?:[\\w\u00c0-\uFFFF*_-";fluid.simpleCSSMatcher={regexp:new RegExp("([#.]?)("+charStart+"]|\\\\.)+)","g"),charToTag:{"":"tag","#":"id",".":"clazz"}};fluid.IoCSSMatcher={regexp:new RegExp("([&#]?)("+charStart+"]|\\.)+)","g"),charToTag:{"":"context","&":"context","#":"id"}};var childSeg=new RegExp("\\s*(>)?\\s*","g");fluid.parseSelector=function(selstring,strategy){var togo=[];selstring=$.trim(selstring);var regexp=strategy.regexp;regexp.lastIndex=0;var lastIndex=0;while(true){var atNode=[];var first=true;while(true){var segMatch=regexp.exec(selstring);if(!segMatch){break;}
if(segMatch.index!==lastIndex){if(first){fluid.fail("Error in selector string - cannot match child selector expression starting at "+selstring.substring(lastIndex));}
else{break;}}
var thisNode={};var text=segMatch[2];var targetTag=strategy.charToTag[segMatch[1]];if(targetTag){thisNode[targetTag]=text;}
atNode[atNode.length]=thisNode;lastIndex=regexp.lastIndex;first=false;}
childSeg.lastIndex=lastIndex;var fullAtNode={predList:atNode};var childMatch=childSeg.exec(selstring);if(!childMatch||childMatch.index!==lastIndex){fluid.fail("Error in selector string - can not match child selector expression at "+selstring.substring(lastIndex));}
if(childMatch[1]===">"){fullAtNode.child=true;}
togo[togo.length]=fullAtNode;if(childSeg.lastIndex>=selstring.length){break;}
lastIndex=childSeg.lastIndex;regexp.lastIndex=childSeg.lastIndex;}
return togo;};fluid.stringToRegExp=function(str,flags){return new RegExp(str.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g,"\\$&"),flags);};fluid.stringTemplate=function(template,values){var keys=fluid.keys(values);keys=keys.sort(fluid.compareStringLength());for(var i=0;i<keys.length;++i){var key=keys[i];var re=fluid.stringToRegExp("%"+key,"g");template=template.replace(re,values[key]);}
return template;};fluid.messageResolver=function(options){var that=fluid.initLittleComponent("fluid.messageResolver",options);that.messageBase=that.options.parseFunc(that.options.messageBase);that.lookup=function(messagecodes){var resolved=fluid.messageResolver.resolveOne(that.messageBase,messagecodes);if(resolved===undefined){return fluid.find(that.options.parents,function(parent){return parent?parent.lookup(messagecodes):undefined;});}else{return{template:resolved,resolveFunc:that.options.resolveFunc};}};that.resolve=function(messagecodes,args){if(!messagecodes){return"[No messagecodes provided]";}
messagecodes=fluid.makeArray(messagecodes);var looked=that.lookup(messagecodes);return looked?looked.resolveFunc(looked.template,args):"[Message string for key "+messagecodes[0]+" not found]";};return that;};fluid.defaults("fluid.messageResolver",{mergePolicy:{messageBase:"nomerge",parents:"nomerge"},resolveFunc:fluid.stringTemplate,parseFunc:fluid.identity,messageBase:{},parents:[]});fluid.messageResolver.resolveOne=function(messageBase,messagecodes){for(var i=0;i<messagecodes.length;++i){var code=messagecodes[i];var message=messageBase[code];if(message!==undefined){return message;}}};fluid.messageLocator=function(messageBase,resolveFunc){var resolver=fluid.messageResolver({messageBase:messageBase,resolveFunc:resolveFunc});return function(messagecodes,args){return resolver.resolve(messagecodes,args);};};})(jQuery,fluid_1_5);var fluid_1_5=fluid_1_5||{};(function($,fluid){var NAMESPACE_KEY="fluid-scoped-data";fluid.getScopedData=function(target,key){var data=$(target).data(NAMESPACE_KEY);return data?data[key]:undefined;};fluid.setScopedData=function(target,key,value){$(target).each(function(){var data=$.data(this,NAMESPACE_KEY)||{};data[key]=value;$.data(this,NAMESPACE_KEY,data);});};var lastFocusedElement=null;$(document).bind("focusin",function(event){lastFocusedElement=event.target;});fluid.getLastFocusedElement=function(){return lastFocusedElement;}
var ENABLEMENT_KEY="enablement";fluid.enabled=function(target,state){target=$(target);if(state===undefined){return fluid.getScopedData(target,ENABLEMENT_KEY)!==false;}
else{$("*",target).add(target).each(function(){if(fluid.getScopedData(this,ENABLEMENT_KEY)!==undefined){fluid.setScopedData(this,ENABLEMENT_KEY,state);}
else if(/select|textarea|input/i.test(this.nodeName)){$(this).prop("disabled",!state);}});fluid.setScopedData(target,ENABLEMENT_KEY,state);}};fluid.initEnablement=function(target){fluid.setScopedData(target,ENABLEMENT_KEY,true);};function applyOp(node,func){node=$(node);node.trigger("fluid-"+func);node[func]();}
$.each(["focus","blur"],function(i,name){fluid[name]=function(elem){applyOp(elem,name);}});})(jQuery,fluid_1_5);var fluid_1_5=fluid_1_5||{};(function($,fluid){fluid.dom=fluid.dom||{};var getNextNode=function(iterator){if(iterator.node.firstChild){iterator.node=iterator.node.firstChild;iterator.depth+=1;return iterator;}
while(iterator.node){if(iterator.node.nextSibling){iterator.node=iterator.node.nextSibling;return iterator;}
iterator.node=iterator.node.parentNode;iterator.depth-=1;}
return iterator;};fluid.dom.iterateDom=function(node,acceptor,allNodes){var currentNode={node:node,depth:0};var prevNode=node;var condition;while(currentNode.node!==null&&currentNode.depth>=0&&currentNode.depth<fluid.dom.iterateDom.DOM_BAIL_DEPTH){condition=null;if(currentNode.node.nodeType===1||allNodes){condition=acceptor(currentNode.node,currentNode.depth);}
if(condition){if(condition==="delete"){currentNode.node.parentNode.removeChild(currentNode.node);currentNode.node=prevNode;}
else if(condition==="stop"){return currentNode.node;}}
prevNode=currentNode.node;currentNode=getNextNode(currentNode);}};fluid.dom.iterateDom.DOM_BAIL_DEPTH=256;fluid.dom.isContainer=function(container,containee){for(;containee;containee=containee.parentNode){if(container===containee){return true;}}
return false;};fluid.dom.getElementText=function(element){var nodes=element.childNodes;var text="";for(var i=0;i<nodes.length;++i){var child=nodes[i];if(child.nodeType===3){text=text+child.nodeValue;}}
return text;};})(jQuery,fluid_1_5);fluid_1_5=fluid_1_5||{};(function($,fluid){var unUnicode=/(\\u[\dabcdef]{4}|\\x[\dabcdef]{2})/g;fluid.unescapeProperties=function(string){string=string.replace(unUnicode,function(match){var code=match.substring(2);var parsed=parseInt(code,16);return String.fromCharCode(parsed);});var pos=0;while(true){var backpos=string.indexOf("\\",pos);if(backpos===-1){break;}
if(backpos===string.length-1){return[string.substring(0,string.length-1),true];}
var replace=string.charAt(backpos+1);if(replace==="n")replace="\n";if(replace==="r")replace="\r";if(replace==="t")replace="\t";string=string.substring(0,backpos)+replace+string.substring(backpos+2);pos=backpos+1;}
return[string,false];};var breakPos=/[^\\][\s:=]/;fluid.parseJavaProperties=function(text){var togo={};text=text.replace(/\r\n/g,"\n");text=text.replace(/\r/g,"\n");lines=text.split("\n");var contin,key,valueComp,valueRaw,valueEsc;for(var i=0;i<lines.length;++i){var line=$.trim(lines[i]);if(!line||line.charAt(0)==="#"||line.charAt(0)==='!'){continue;}
if(!contin){valueComp="";var breakpos=line.search(breakPos);if(breakpos===-1){key=line;valueRaw="";}
else{key=$.trim(line.substring(0,breakpos+1));valueRaw=$.trim(line.substring(breakpos+2));if(valueRaw.charAt(0)===":"||valueRaw.charAt(0)==="="){valueRaw=$.trim(valueRaw.substring(1));}}
key=fluid.unescapeProperties(key)[0];valueEsc=fluid.unescapeProperties(valueRaw);}
else{valueEsc=fluid.unescapeProperties(line);}
contin=valueEsc[1];if(!valueEsc[1]){togo[key]=valueComp+valueEsc[0];}
else{valueComp+=valueEsc[0];}}
return togo;};fluid.formatMessage=function(messageString,args){if(!args){return messageString;}
if(typeof(args)==="string"){args=[args];}
for(var i=0;i<args.length;++i){messageString=messageString.replace("{"+i+"}",args[i]);}
return messageString;};})(jQuery,fluid_1_5);var fluid_1_5=fluid_1_5||{};var fluid=fluid||fluid_1_5;(function($,fluid){fluid.renderTimestamp=function(date){var zeropad=function(num,width){if(!width)width=2;var numstr=(num==undefined?"":num.toString());return"00000".substring(5-width+numstr.length)+numstr;}
return zeropad(date.getHours())+":"+zeropad(date.getMinutes())+":"+zeropad(date.getSeconds())+"."+zeropad(date.getMilliseconds(),3);};fluid.isTracing=false;fluid.registerNamespace("fluid.tracing");fluid.tracing.pathCount=[];fluid.tracing.summarisePathCount=function(pathCount){pathCount=pathCount||fluid.tracing.pathCount;var togo={};for(var i=0;i<pathCount.length;++i){var path=pathCount[i];if(!togo[path]){togo[path]=1;}
else{++togo[path];}}
var toReallyGo=[];fluid.each(togo,function(el,path){toReallyGo.push({path:path,count:el});});toReallyGo.sort(function(a,b){return b.count-a.count});return toReallyGo;};fluid.tracing.condensePathCount=function(prefixes,pathCount){prefixes=fluid.makeArray(prefixes);var prefixCount={};fluid.each(prefixes,function(prefix){prefixCount[prefix]=0;});var togo=[];fluid.each(pathCount,function(el){var path=el.path;if(!fluid.find(prefixes,function(prefix){if(path.indexOf(prefix)===0){prefixCount[prefix]+=el.count;return true;}})){togo.push(el);}});fluid.each(prefixCount,function(count,path){togo.unshift({path:path,count:count});});return togo;};fluid.detectStackStyle=function(e){var style="other";var stackStyle={offset:0};if(e["arguments"]){style="chrome";}else if(typeof window!=="undefined"&&window.opera&&e.stacktrace){style="opera10";}else if(e.stack){style="firefox";stackStyle.offset=e.stack.indexOf("Trace exception")===-1?1:0;}else if(typeof window!=='undefined'&&window.opera&&!('stacktrace'in e)){style="opera";}
stackStyle.style=style;return stackStyle;};fluid.obtainException=function(){try{throw new Error("Trace exception");}
catch(e){return e;}};var stackStyle=fluid.detectStackStyle(fluid.obtainException());fluid.registerNamespace("fluid.exceptionDecoders");fluid.decodeStack=function(){if(stackStyle.style!=="firefox"){return null;}
var e=fluid.obtainException();return fluid.exceptionDecoders[stackStyle.style](e);};fluid.exceptionDecoders.firefox=function(e){var lines=e.stack.replace(/(?:\n@:0)?\s+$/m,'').replace(/^\(/gm,'{anonymous}(').split('\n');return fluid.transform(lines,function(line){var atind=line.indexOf("@");return atind===-1?[line]:[line.substring(atind+1),line.substring(0,atind)];});};fluid.getCallerInfo=function(atDepth){atDepth=(atDepth||3)-stackStyle.offset;var stack=fluid.decodeStack();return stack?stack[atDepth][0]:null;};function generate(c,count){var togo="";for(var i=0;i<count;++i){togo+=c;}
return togo;}
function printImpl(obj,small,options){var big=small+options.indentChars;if(obj===null){return"null";}
else if(fluid.isPrimitive(obj)){return JSON.stringify(obj);}
else{var j=[];if(fluid.isArrayable(obj)){if(obj.length===0){return"[]";}
for(var i=0;i<obj.length;++i){j[i]=printImpl(obj[i],big,options);}
return"[\n"+big+j.join(",\n"+big)+"\n"+small+"]";}
else{var i=0;fluid.each(obj,function(value,key){j[i++]=JSON.stringify(key)+": "+printImpl(value,big,options);});return"{\n"+big+j.join(",\n"+big)+"\n"+small+"}";}}}
fluid.prettyPrintJSON=function(obj,options){options=$.extend({indent:4},options);options.indentChars=generate(" ",options.indent);return printImpl(obj,"",options);}
fluid.dumpEl=function(element){var togo;if(!element){return"null";}
if(element.nodeType===3||element.nodeType===8){return"[data: "+element.data+"]";}
if(element.nodeType===9){return"[document: location "+element.location+"]";}
if(!element.nodeType&&fluid.isArrayable(element)){togo="[";for(var i=0;i<element.length;++i){togo+=fluid.dumpEl(element[i]);if(i<element.length-1){togo+=", ";}}
return togo+"]";}
element=$(element);togo=element.get(0).tagName;if(element.id){togo+="#"+element.id;}
if(element.attr("class")){togo+="."+element.attr("class");}
return togo;};})(jQuery,fluid_1_5);var fluid_1_5=fluid_1_5||{};(function($,fluid){fluid.BINDING_ROOT_KEY="fluid-binding-root";fluid.findData=function(elem,name){while(elem){var data=$.data(elem,name);if(data){return data;}
elem=elem.parentNode;}};fluid.bindFossils=function(node,data,fossils){$.data(node,fluid.BINDING_ROOT_KEY,{data:data,fossils:fossils});};fluid.boundPathForNode=function(node,fossils){node=fluid.unwrap(node);var key=node.name||node.id;var record=fossils[key];return record?record.EL:null;};fluid.applyBoundChange=function(node,newValue,applier){node=fluid.unwrap(node);if(newValue===undefined){newValue=fluid.value(node);}
if(node.nodeType===undefined&&node.length>0){node=node[0];}
var root=fluid.findData(node,fluid.BINDING_ROOT_KEY);if(!root){fluid.fail("Bound data could not be discovered in any node above "+fluid.dumpEl(node));}
var name=node.name;var fossil=root.fossils[name];if(!fossil){fluid.fail("No fossil discovered for name "+name+" in fossil record above "+fluid.dumpEl(node));}
if(typeof(fossil.oldvalue)==="boolean"){newValue=newValue[0]?true:false;}
var EL=root.fossils[name].EL;if(applier){applier.fireChangeRequest({path:EL,value:newValue,source:node.id});}else{fluid.set(root.data,EL,newValue);}};fluid.model.makeEnvironmentStrategy=function(environment){return function(root,segment,index){return index===0&&environment[segment]?environment[segment]:undefined;};};fluid.model.defaultCreatorStrategy=function(root,segment){if(root[segment]===undefined){root[segment]={};return root[segment];}};fluid.model.defaultFetchStrategy=function(root,segment){return segment===""?root:root[segment];};fluid.model.funcResolverStrategy=function(root,segment){if(root.resolvePathSegment){return root.resolvePathSegment(segment);}};fluid.model.defaultGetConfig={strategies:[fluid.model.funcResolverStrategy,fluid.model.defaultFetchStrategy]};fluid.model.defaultSetConfig={strategies:[fluid.model.funcResolverStrategy,fluid.model.defaultFetchStrategy,fluid.model.defaultCreatorStrategy]};fluid.model.traverseWithStrategy=function(root,segs,initPos,config,uncess){var strategies=config.strategies;var limit=segs.length-uncess;for(var i=initPos;i<limit;++i){if(!root){return root;}
var accepted=undefined;for(var j=0;j<strategies.length;++j){accepted=strategies[j](root,segs[i],i+1,segs);if(accepted!==undefined){break;}}
if(accepted===fluid.NO_VALUE){accepted=undefined;}
root=accepted;}
return root;};fluid.model.getValueAndSegments=function(root,EL,config,initSegs){return fluid.model.accessWithStrategy(root,EL,fluid.NO_VALUE,config,initSegs,true);};fluid.model.makeTrundler=function(config){return function(valueSeg,EL){return fluid.model.getValueAndSegments(valueSeg.root,EL,config,valueSeg.segs);};};fluid.model.getWithStrategy=function(root,EL,config,initSegs){return fluid.model.accessWithStrategy(root,EL,fluid.NO_VALUE,config,initSegs);};fluid.model.setWithStrategy=function(root,EL,newValue,config,initSegs){fluid.model.accessWithStrategy(root,EL,newValue,config,initSegs);};fluid.model.accessWithStrategy=function(root,EL,newValue,config,initSegs,returnSegs){if(!fluid.isPrimitive(EL)&&!fluid.isArrayable(EL)){var key=EL.type||"default";var resolver=config.resolvers[key];if(!resolver){fluid.fail("Unable to find resolver of type "+key);}
var trundler=fluid.model.makeTrundler(config);var valueSeg={root:root,segs:initSegs};valueSeg=resolver(valueSeg,EL,trundler);if(EL.path&&valueSeg){valueSeg=trundler(valueSeg,EL.path);}
return returnSegs?valueSeg:(valueSeg?valueSeg.root:undefined);}
else{return fluid.model.accessImpl(root,EL,newValue,config,initSegs,returnSegs,fluid.model.traverseWithStrategy);}};fluid.pathUtil={};var getPathSegmentImpl=function(accept,path,i){var segment=null;if(accept){segment="";}
var escaped=false;var limit=path.length;for(;i<limit;++i){var c=path.charAt(i);if(!escaped){if(c==='.'){break;}
else if(c==='\\'){escaped=true;}
else if(segment!==null){segment+=c;}}
else{escaped=false;if(segment!==null){segment+=c;}}}
if(segment!==null){accept[0]=segment;}
return i;};var globalAccept=[];fluid.pathUtil.getPathSegment=function(path,i){getPathSegmentImpl(globalAccept,path,i);return globalAccept[0];};fluid.pathUtil.getHeadPath=function(path){return fluid.pathUtil.getPathSegment(path,0);};fluid.pathUtil.getFromHeadPath=function(path){var firstdot=getPathSegmentImpl(null,path,0);return firstdot===path.length?"":path.substring(firstdot+1);};function lastDotIndex(path){return path.lastIndexOf(".");}
fluid.pathUtil.getToTailPath=function(path){var lastdot=lastDotIndex(path);return lastdot===-1?"":path.substring(0,lastdot);};fluid.pathUtil.getTailPath=function(path){var lastdot=lastDotIndex(path);return fluid.pathUtil.getPathSegment(path,lastdot+1);};fluid.pathUtil.parseEL=function(path){var togo=[];var index=0;var limit=path.length;while(index<limit){var firstdot=getPathSegmentImpl(globalAccept,path,index);togo.push(globalAccept[0]);index=firstdot+1;}
return togo;};var composeSegment=function(prefix,toappend){for(var i=0;i<toappend.length;++i){var c=toappend.charAt(i);if(c==='.'||c==='\\'||c==='}'){prefix+='\\';}
prefix+=c;}
return prefix;};fluid.pathUtil.escapeSegment=function(segment){return composeSegment("",segment);};fluid.pathUtil.composePath=function(prefix,suffix){if(prefix.length!==0){prefix+='.';}
return composeSegment(prefix,suffix);};fluid.pathUtil.matchSegments=function(toMatch,segs,start,end){if(end-start!==toMatch.length){return false;}
for(var i=start;i<end;++i){if(segs[i]!==toMatch[i-start]){return false;}}
return true;};fluid.pathUtil.getExcessPath=function(base,longer){var index=longer.indexOf(base);if(index!==0){fluid.fail("Path "+base+" is not a prefix of path "+longer);}
if(base.length===longer.length){return"";}
if(longer[base.length]!=="."){fluid.fail("Path "+base+" is not properly nested in path "+longer);}
return longer.substring(base.length+1);};fluid.pathUtil.matchPath=function(spec,path,exact){var togo="";while(true){if(((path==="")^(spec===""))&&exact){return null;}
if(!spec||!path){break;}
var spechead=fluid.pathUtil.getHeadPath(spec);var pathhead=fluid.pathUtil.getHeadPath(path);if(spechead!=="*"&&spechead!==pathhead){return null;}
togo=fluid.pathUtil.composePath(togo,pathhead);spec=fluid.pathUtil.getFromHeadPath(spec);path=fluid.pathUtil.getFromHeadPath(path);}
return togo;};fluid.model.isNullChange=function(model,request,resolverGetConfig){if(request.type==="ADD"){var existing=fluid.get(model,request.path,resolverGetConfig);if(existing===request.value){return true;}}};fluid.model.applyChangeRequest=function(model,request,resolverSetConfig){var pen=fluid.model.accessWithStrategy(model,request.path,fluid.VALUE,resolverSetConfig||fluid.model.defaultSetConfig,null,true);var last=pen.segs[pen.segs.length-1];if(request.type==="ADD"||request.type==="MERGE"){if(pen.segs.length===0||(request.type==="MERGE"&&pen.root[last])){if(request.type==="ADD"){fluid.clear(pen.root);}
$.extend(true,pen.segs.length===0?pen.root:pen.root[last],request.value);}
else{pen.root[last]=request.value;}}
else if(request.type==="DELETE"){if(pen.segs.length===0){fluid.clear(pen.root);}
else{delete pen.root[last];}}};fluid.addSourceGuardedListener=function(applier,path,source,func,eventName){eventName=eventName||"modelChanged";applier[eventName].addListener(path,function(){if(!applier.hasChangeSource(source)){func.apply(null,arguments);}});};fluid.fireSourcedChange=function(applier,path,value,source){applier.fireChangeRequest({path:path,value:value,source:source});};fluid.requestChanges=function(applier,changes){for(var i=0;i<changes.length;++i){applier.fireChangeRequest(changes[i]);}};fluid.bindRequestChange=function(that){that.requestChange=function(path,value,type){var changeRequest={path:path,value:value,type:type};that.fireChangeRequest(changeRequest);};};function sourceWrapModelChanged(modelChanged,threadLocal){return function(changeRequest){var sources=threadLocal().sources;var args=arguments;var source=changeRequest.source||"";fluid.tryCatch(function(){if(sources[source]===undefined){sources[source]=0;}
++sources[source];modelChanged.apply(null,args);},null,function(){--sources[source];});};}
fluid.makeChangeApplier=function(model,options){options=options||{};var baseEvents={guards:fluid.event.getEventFirer(false,true,"guard event"),postGuards:fluid.event.getEventFirer(false,true,"postGuard event"),modelChanged:fluid.event.getEventFirer(false,false,"modelChanged event")};var threadLocal=fluid.threadLocal(function(){return{sources:{}};});var that={changeid:fluid.allocateGuid(),model:model};function makeGuardWrapper(cullUnchanged){if(!cullUnchanged){return null;}
var togo=function(guard){return function(model,changeRequest,internalApplier){var oldRet=guard(model,changeRequest,internalApplier);if(oldRet===false){return false;}
else{if(fluid.model.isNullChange(model,changeRequest)){togo.culled=true;return false;}}};};return togo;}
function wrapListener(listener,spec){var pathSpec=spec;var transactional=false;var priority=Number.MAX_VALUE;if(typeof(spec)!=="string"){pathSpec=spec.path;transactional=spec.transactional;if(spec.priority!==undefined){priority=spec.priority;}}
else{if(pathSpec.charAt(0)==="!"){transactional=true;pathSpec=pathSpec.substring(1);}}
var wrapped=function(changePath,fireSpec,accum){var guid=fluid.event.identifyListener(listener);var exist=fireSpec.guids[guid];if(!exist){var match=fluid.pathUtil.matchPath(pathSpec,changePath);if(match!==null){var record={changePath:changePath,pathSpec:pathSpec,listener:listener,priority:priority,transactional:transactional};if(accum){record.accumulate=[accum];}
fireSpec.guids[guid]=record;var collection=transactional?"transListeners":"listeners";fireSpec[collection].push(record);fireSpec.all.push(record);}}
else if(accum){if(!exist.accumulate){exist.accumulate=[];}
exist.accumulate.push(accum);}};fluid.event.impersonateListener(listener,wrapped);return wrapped;}
function fireFromSpec(name,fireSpec,args,category,wrapper){return baseEvents[name].fireToListeners(fireSpec[category],args,wrapper);}
function fireComparator(recA,recB){return recA.priority-recB.priority;}
function prepareFireEvent(name,changePath,fireSpec,accum){baseEvents[name].fire(changePath,fireSpec,accum);fireSpec.all.sort(fireComparator);fireSpec.listeners.sort(fireComparator);fireSpec.transListeners.sort(fireComparator);}
function makeFireSpec(){return{guids:{},all:[],listeners:[],transListeners:[]};}
function getFireSpec(name,changePath){var fireSpec=makeFireSpec();prepareFireEvent(name,changePath,fireSpec);return fireSpec;}
function fireEvent(name,changePath,args,wrapper){var fireSpec=getFireSpec(name,changePath);return fireFromSpec(name,fireSpec,args,"all",wrapper);}
function adaptListener(that,name){that[name]={addListener:function(spec,listener,namespace){baseEvents[name].addListener(wrapListener(listener,spec),namespace);},removeListener:function(listener){baseEvents[name].removeListener(listener);}};}
adaptListener(that,"guards");adaptListener(that,"postGuards");adaptListener(that,"modelChanged");function preFireChangeRequest(changeRequest){if(!changeRequest.type){changeRequest.type="ADD";}}
var bareApplier={fireChangeRequest:function(changeRequest){that.fireChangeRequest(changeRequest,true);}};fluid.bindRequestChange(bareApplier);that.fireChangeRequest=function(changeRequest,defeatGuards){preFireChangeRequest(changeRequest);var guardFireSpec=defeatGuards?null:getFireSpec("guards",changeRequest.path);if(guardFireSpec&&guardFireSpec.transListeners.length>0){var ation=that.initiate();ation.fireChangeRequest(changeRequest,guardFireSpec);ation.commit();}
else{if(!defeatGuards){var prevent=fireFromSpec("guards",guardFireSpec,[model,changeRequest,bareApplier],"listeners");if(prevent===false){return false;}}
var oldModel=model;if(!options.thin){oldModel={};fluid.model.copyModel(oldModel,model);}
fluid.model.applyChangeRequest(model,changeRequest,options.resolverSetConfig);fireEvent("modelChanged",changeRequest.path,[model,oldModel,[changeRequest]]);}};that.fireChangeRequest=sourceWrapModelChanged(that.fireChangeRequest,threadLocal);fluid.bindRequestChange(that);function fireAgglomerated(eventName,formName,changes,args,accpos){var fireSpec=makeFireSpec();for(var i=0;i<changes.length;++i){prepareFireEvent(eventName,changes[i].path,fireSpec,changes[i]);}
for(var j=0;j<fireSpec[formName].length;++j){var spec=fireSpec[formName][j];if(accpos){args[accpos]=spec.accumulate;}
var ret=spec.listener.apply(null,args);if(ret===false){return false;}}}
that.initiate=function(newModel){var cancelled=false;var changes=[];if(options.thin){newModel=model;}
else{newModel=newModel||{};fluid.model.copyModel(newModel,model);}
var internalApplier={fireChangeRequest:function(changeRequest){preFireChangeRequest(changeRequest);fluid.model.applyChangeRequest(newModel,changeRequest,options.resolverSetConfig);changes.push(changeRequest);}};fluid.bindRequestChange(internalApplier);var ation={commit:function(){var oldModel;if(cancelled){return false;}
var ret=fireAgglomerated("postGuards","transListeners",changes,[newModel,null,internalApplier],1);if(ret===false){return false;}
if(options.thin){oldModel=model;}
else{oldModel={};fluid.model.copyModel(oldModel,model);fluid.clear(model);fluid.model.copyModel(model,newModel);}
fireAgglomerated("modelChanged","all",changes,[model,oldModel,null],2);},fireChangeRequest:function(changeRequest){preFireChangeRequest(changeRequest);if(options.cullUnchanged&&fluid.model.isNullChange(model,changeRequest,options.resolverGetConfig)){return;}
var wrapper=makeGuardWrapper(options.cullUnchanged);var prevent=fireEvent("guards",changeRequest.path,[newModel,changeRequest,internalApplier],wrapper);if(prevent===false&&!(wrapper&&wrapper.culled)){cancelled=true;}
if(!cancelled){if(!(wrapper&&wrapper.culled)){fluid.model.applyChangeRequest(newModel,changeRequest,options.resolverSetConfig);changes.push(changeRequest);}}}};ation.fireChangeRequest=sourceWrapModelChanged(ation.fireChangeRequest,threadLocal);fluid.bindRequestChange(ation);return ation;};that.hasChangeSource=function(source){return threadLocal().sources[source]>0;};return that;};fluid.makeSuperApplier=function(){var subAppliers=[];var that={};that.addSubApplier=function(path,subApplier){subAppliers.push({path:path,subApplier:subApplier});};that.fireChangeRequest=function(request){for(var i=0;i<subAppliers.length;++i){var path=subAppliers[i].path;if(request.path.indexOf(path)===0){var subpath=request.path.substring(path.length+1);var subRequest=fluid.copy(request);subRequest.path=subpath;subAppliers[i].subApplier.fireChangeRequest(subRequest);}}};fluid.bindRequestChange(that);return that;};fluid.attachModel=function(baseModel,path,model){var segs=fluid.model.parseEL(path);for(var i=0;i<segs.length-1;++i){var seg=segs[i];var subModel=baseModel[seg];if(!subModel){baseModel[seg]=subModel={};}
baseModel=subModel;}
baseModel[segs[segs.length-1]]=model;};fluid.assembleModel=function(modelSpec){var model={};var superApplier=fluid.makeSuperApplier();var togo={model:model,applier:superApplier};for(var path in modelSpec){var rec=modelSpec[path];fluid.attachModel(model,path,rec.model);if(rec.applier){superApplier.addSubApplier(path,rec.applier);}}
return togo;};})(jQuery,fluid_1_5);var fluid_1_5=fluid_1_5||{};var fluid=fluid||fluid_1_5;(function($){fluid.registerNamespace("fluid.model.transform");fluid.defaults("fluid.transformFunction",{gradeNames:"fluid.function"});fluid.defaults("fluid.standardInputTransformFunction",{gradeNames:"fluid.transformFunction"});fluid.defaults("fluid.standardOutputTransformFunction",{gradeNames:"fluid.transformFunction"});fluid.defaults("fluid.standardTransformFunction",{gradeNames:["fluid.standardInputTransformFunction","fluid.standardOutputTransformFunction"]});fluid.defaults("fluid.lens",{gradeNames:"fluid.transformFunction",invertConfiguration:null});fluid.model.transform.pathToRule=function(inputPath){return{expander:{type:"fluid.model.transform.value",inputPath:inputPath}};};fluid.model.transform.valueToRule=function(value){return{expander:{type:"fluid.model.transform.literalValue",value:value}};};fluid.model.composePaths=function(prefix,suffix){prefix=prefix||"";suffix=suffix||"";return!prefix?suffix:(!suffix?prefix:prefix+"."+suffix);};fluid.model.transform.accumulateInputPath=function(inputPath,expander,paths){if(inputPath!==undefined){paths.push(fluid.model.composePaths(expander.inputPrefix,inputPath));}};fluid.model.transform.getValue=function(inputPath,value,expander){var togo;if(inputPath!==undefined){togo=fluid.get(expander.source,fluid.model.composePaths(expander.inputPrefix,inputPath),expander.resolverGetConfig);}
if(togo===undefined){togo=fluid.isPrimitive(value)?value:expander.expand(value);}
return togo;};fluid.model.transform.NONDEFAULT_OUTPUT_PATH_RETURN={};fluid.model.transform.setValue=function(userOutputPath,value,expander,merge){var toset=fluid.copy(value);var outputPath=fluid.model.composePaths(expander.outputPrefix,userOutputPath);if(toset!==undefined){expander.applier.requestChange(outputPath,toset,merge?"MERGE":undefined);}
return userOutputPath?fluid.model.transform.NONDEFAULT_OUTPUT_PATH_RETURN:toset;};fluid.model.transform.value=fluid.identity;fluid.defaults("fluid.model.transform.value",{gradeNames:"fluid.standardTransformFunction",invertConfiguration:"fluid.model.transform.invertValue"});fluid.model.transform.invertValue=function(expandSpec,expander){var togo=fluid.copy(expandSpec);togo.inputPath=fluid.model.composePaths(expander.outputPrefix,expandSpec.outputPath);togo.outputPath=fluid.model.composePaths(expander.inputPrefix,expandSpec.inputPath);return togo;};fluid.model.transform.literalValue=function(expanderSpec){return expanderSpec.value;};fluid.defaults("fluid.model.transform.literalValue",{gradeNames:"fluid.standardOutputTransformFunction"});fluid.model.transform.arrayValue=fluid.makeArray;fluid.defaults("fluid.model.transform.arrayValue",{gradeNames:"fluid.standardTransformFunction"});fluid.model.transform.count=function(value){return fluid.makeArray(value).length;};fluid.defaults("fluid.model.transform.count",{gradeNames:"fluid.standardTransformFunction"});fluid.model.transform["delete"]=function(expandSpec,expander){var outputPath=fluid.model.composePaths(expander.outputPrefix,expandSpec.outputPath);expander.applier.requestChange(outputPath,null,"DELETE");};fluid.defaults("fluid.model.transform.delete",{gradeNames:"fluid.transformFunction"});fluid.model.transform.firstValue=function(expandSpec,expander){if(!expandSpec.values||!expandSpec.values.length){fluid.fail("firstValue transformer requires an array of values at path named \"values\", supplied",expandSpec);}
for(var i=0;i<expandSpec.values.length;i++){var value=expandSpec.values[i];var expanded=expander.expand(value);if(expanded!==undefined){return expanded;}}};fluid.defaults("fluid.model.transform.firstValue",{gradeNames:"fluid.transformFunction"});fluid.deepEquals=function(expected,actual,stats){if(fluid.isPrimitive(expected)){if(expected===actual){++stats.matchCount;}else{++stats.mismatchCount;stats.messages.push("Value mismatch at path "+stats.path+": expected "+expected+" actual "+actual);}}
else{if(typeof(expected)!==typeof(actual)){++stats.mismatchCount;stats.messages.push("Type mismatch at path "+stats.path+": expected "+typeof(expected)+" actual "+typeof(actual));}else{fluid.each(expected,function(value,key){stats.pathOps.push(key);fluid.deepEquals(expected[key],actual[key],stats);stats.pathOps.pop(key);});}}};fluid.model.transform.matchValue=function(expected,actual){if(fluid.isPrimitive(expected)){return expected===actual?1:0;}else{var stats={matchCount:0,mismatchCount:0,messages:[]};fluid.model.makePathStack(stats,"path");fluid.deepEquals(expected,actual,stats);return stats.matchCount;}};fluid.model.transform.compareMatches=function(speca,specb){return specb.matchCount-speca.matchCount;};fluid.firstDefined=function(a,b){return a===undefined?b:a;};fluid.model.transform.matchValueMapperFull=function(outerValue,expander,expandSpec){var o=expandSpec.options;if(o.length===0){fluid.fail("valueMapper supplied empty list of options: ",expandSpec);}
if(o.length===1){return 0;}
var matchPower=[];for(var i=0;i<o.length;++i){var option=o[i];var value=fluid.firstDefined(fluid.model.transform.getValue(option.inputPath,undefined,expander),outerValue);var matchCount=fluid.model.transform.matchValue(option.undefinedInputValue?undefined:option.inputValue,value);matchPower[i]={index:i,matchCount:matchCount};}
matchPower.sort(fluid.model.transform.compareMatches);return matchPower[0].matchCount===matchPower[1].matchCount?-1:matchPower[0].index;};fluid.model.transform.valueMapper=function(expandSpec,expander){if(!expandSpec.options){fluid.fail("demultiplexValue requires a list or hash of options at path named \"options\", supplied ",expandSpec);}
var value=fluid.model.transform.getValue(expandSpec.inputPath,undefined,expander);var deref=fluid.isArrayable(expandSpec.options)?function(testVal){var index=fluid.model.transform.matchValueMapperFull(testVal,expander,expandSpec);return index===-1?null:expandSpec.options[index];}:function(testVal){return expandSpec.options[testVal];};var indexed=deref(value);if(!indexed){indexed=deref(expandSpec.defaultInputValue);}
if(!indexed){return;}
var outputValue=fluid.isPrimitive(indexed)?indexed:(indexed.undefinedOutputValue?undefined:(indexed.outputValue===undefined?expandSpec.defaultOutputValue:indexed.outputValue));var outputPath=indexed.outputPath===undefined?expandSpec.outputPath:indexed.outputPath;return fluid.model.transform.setValue(outputPath,outputValue,expander,expandSpec.merge);};fluid.model.transform.valueMapper.invert=function(expandSpec,expander){var options=[];var togo={type:"fluid.model.transform.valueMapper",options:options};var isArray=fluid.isArrayable(expandSpec.options);var findCustom=function(name){return fluid.find(expandSpec.options,function(option){if(option[name]){return true;}});};var anyCustomOutput=findCustom("outputPath");var anyCustomInput=findCustom("inputPath");if(!anyCustomOutput){togo.inputPath=fluid.model.composePaths(expander.outputPrefix,expandSpec.outputPath);}
if(!anyCustomInput){togo.outputPath=fluid.model.composePaths(expander.inputPrefix,expandSpec.inputPath);}
var def=fluid.firstDefined;fluid.each(expandSpec.options,function(option,key){var outOption={};var origInputValue=def(isArray?option.inputValue:key,expandSpec.defaultInputValue);if(origInputValue===undefined){fluid.fail("Failure inverting configuration for valueMapper - inputValue could not be resolved for record "+key+": ",expandSpec);}
outOption.outputValue=origInputValue;var origOutputValue=def(option.outputValue,expandSpec.defaultOutputValue);outOption.inputValue=origOutputValue;if(anyCustomOutput){outOption.inputPath=fluid.model.composePaths(expander.outputPrefix,def(option.outputPath,expandSpec.outputPath));}
if(anyCustomInput){outOption.outputPath=fluid.model.composePaths(expander.inputPrefix,def(option.inputPath,expandSpec.inputPath));}
options.push(outOption);});return togo;};fluid.model.transform.valueMapper.collect=function(expandSpec,expander){var togo=[];fluid.model.transform.accumulateInputPath(expandSpec.inputPath,expander,togo);fluid.each(expandSpec.options,function(option){fluid.model.transform.accumulateInputPath(option.inputPath,expander,togo);});return togo;};fluid.defaults("fluid.model.transform.valueMapper",{gradeNames:["fluid.transformFunction","fluid.lens"],invertConfiguration:"fluid.model.transform.valueMapper.invert",collectInputPaths:"fluid.model.transform.valueMapper.collect"});fluid.model.transform.prefixApplier=function(expandSpec,expander){if(expandSpec.inputPrefix){expander.inputPrefixOp.push(expandSpec.inputPrefix);}
if(expandSpec.outputPrefix){expander.outputPrefixOp.push(expandSpec.outputPrefix);}
expander.expand(expandSpec.value);if(expandSpec.inputPrefix){expander.inputPrefixOp.pop();}
if(expandSpec.outputPrefix){expander.outputPrefixOp.pop();}};fluid.defaults("fluid.model.transform.prefixApplier",{gradeNames:["fluid.transformFunction"]});fluid.model.makePathStack=function(expander,prefixName){var stack=expander[prefixName+"Stack"]=[];expander[prefixName]="";return{push:function(prefix){var newPath=fluid.model.composePaths(expander[prefixName],prefix);stack.push(expander[prefixName]);expander[prefixName]=newPath;},pop:function(){expander[prefixName]=stack.pop();}};};fluid.model.transform.expandExpander=function(expandSpec,expander){var typeName=expandSpec.type;if(!typeName){fluid.fail("Transformation record is missing a type name: ",expandSpec);}
if(typeName.indexOf(".")===-1){typeName="fluid.model.transform."+typeName;}
var expanderFn=fluid.getGlobalValue(typeName);var expdef=fluid.defaults(typeName);if(typeof(expanderFn)!=="function"){fluid.fail("Transformation record specifies transformation function with name "+
expandSpec.type+" which is not a function - ",expanderFn);}
if(!fluid.hasGrade(expdef,"fluid.transformFunction")){expdef=fluid.defaults("fluid.standardTransformFunction");}
var expanderArgs=[expandSpec,expander];if(fluid.hasGrade(expdef,"fluid.standardInputTransformFunction")){var expanded=fluid.model.transform.getValue(expandSpec.inputPath,expandSpec.value,expander);expanderArgs[0]=expanded;expanderArgs[2]=expandSpec;}
var transformed=expanderFn.apply(null,expanderArgs);if(fluid.hasGrade(expdef,"fluid.standardOutputTransformFunction")){transformed=fluid.model.transform.setValue(expandSpec.outputPath,transformed,expander,expandSpec.merge);}
return transformed;};fluid.model.transform.expandWildcards=function(expander,source){fluid.each(source,function(value,key){var q=expander.queuedExpanders;expander.pathOp.push(fluid.pathUtil.escapeSegment(key.toString()));for(var i=0;i<q.length;++i){if(fluid.pathUtil.matchPath(q[i].matchPath,expander.path,true)){var esCopy=fluid.copy(q[i].expandSpec);if(esCopy.inputPath===undefined||fluid.model.transform.hasWildcard(esCopy.inputPath)){esCopy.inputPath="";}
expander.inputPrefixOp.push(expander.path);expander.outputPrefixOp.push(expander.path);fluid.model.transform.expandExpander(esCopy,expander);expander.outputPrefixOp.pop();expander.inputPrefixOp.pop();}}
if(!fluid.isPrimitive(value)){fluid.model.transform.expandWildcards(expander,value);}
expander.pathOp.pop();});};fluid.model.transform.hasWildcard=function(path){return typeof(path)==="string"&&path.indexOf("*")!==-1;};fluid.model.transform.maybePushWildcard=function(expander,expandSpec){var hw=fluid.model.transform.hasWildcard;var matchPath;if(hw(expandSpec.inputPath)){matchPath=fluid.model.composePaths(expander.inputPrefix,expandSpec.inputPath);}
else if(hw(expander.outputPrefix)||hw(expandSpec.outputPath)){matchPath=fluid.model.composePaths(expander.outputPrefix,expandSpec.outputPath);}
if(matchPath){expander.queuedExpanders.push({expandSpec:expandSpec,outputPrefix:expander.outputPrefix,inputPrefix:expander.inputPrefix,matchPath:matchPath});return true;}
return false;};fluid.model.sortByKeyLength=function(inObject){var keys=fluid.keys(inObject);return keys.sort(fluid.compareStringLength(true));};fluid.model.transform.handleExpandExpander=function(expander,expandSpec){if(fluid.model.transform.maybePushWildcard(expander,expandSpec)){return;}
else{return fluid.model.transform.expandExpander(expandSpec,expander);}};fluid.model.transform.handleInvertExpander=function(expander,expandSpec,expdef){var invertor=expdef.invertConfiguration;if(invertor){var inverted=fluid.invokeGlobalFunction(invertor,[expandSpec,expander]);expander.inverted.push(inverted);}};fluid.model.transform.handlerCollectExpander=function(expander,expandSpec,expdef){var standardInput=fluid.hasGrade(expdef,"fluid.standardInputTransformFunction");if(standardInput){fluid.model.transform.accumulateInputPath(expandSpec.inputPath,expander,expander.inputPaths);}
else{var collector=expdef.collectInputPaths;if(collector){var collected=fluid.makeArray(fluid.invokeGlobalFunction(collector,[expandSpec,expander]));expander.inputPaths=expander.inputPaths.concat(collected);}}};fluid.model.transform.expandValue=function(rule,expander){if(typeof(rule)==="string"){rule=fluid.model.transform.pathToRule(rule);}
else if(rule.value&&expander.outputPrefix!==""){rule=fluid.model.transform.valueToRule(rule.value);}
var togo;if(rule.expander){var expanders=fluid.makeArray(rule.expander);for(var i=0;i<expanders.length;++i){var expandSpec=expanders[i];var expdef=fluid.defaults(expandSpec.type);var returned=expander.expanderHandler(expander,expandSpec,expdef);if(returned!==undefined){togo=returned;}}}
fluid.each(rule,function(value,key){if(key!=="expander"){expander.outputPrefixOp.push(key);var result=expander.expand(value,expander);expander.outputPrefixOp.pop();}});return togo;};fluid.model.transform.makeExpander=function(expander,handleFn,expandFn){expandFn=expandFn||fluid.model.transform.expandValue;expander.expand=function(rules){return expandFn(rules,expander);};expander.outputPrefixOp=fluid.model.makePathStack(expander,"outputPrefix");expander.inputPrefixOp=fluid.model.makePathStack(expander,"inputPrefix");expander.expanderHandler=handleFn;};fluid.model.transform.invertConfiguration=function(rules){var expander={inverted:[]};fluid.model.transform.makeExpander(expander,fluid.model.transform.handleInvertExpander);expander.expand(rules);return{expander:expander.inverted};};fluid.model.transform.collectInputPaths=function(rules){var expander={inputPaths:[]};fluid.model.transform.makeExpander(expander,fluid.model.transform.handlerCollectExpander);expander.expand(rules);return expander.inputPaths;};fluid.model.transform.flatSchemaStrategy=function(flatSchema){var keys=fluid.model.sortByKeyLength(flatSchema);return function(root,segment,index,segs){var path=fluid.path.apply(null,segs.slice(0,index));for(var i=0;i<keys.length;++i){var key=keys[i];if(fluid.pathUtil.matchPath(key,path,true)!==null){return flatSchema[key];}}};};fluid.model.transform.defaultSchemaValue=function(schemaValue){var type=fluid.isPrimitive(schemaValue)?schemaValue:schemaValue.type;return type==="array"?[]:{};};fluid.model.transform.isomorphicSchemaStrategy=function(source,getConfig){return function(root,segment,index,segs){var existing=fluid.get(source,segs.slice(0,index),getConfig);return fluid.isArrayable(existing)?"array":"object";};};fluid.model.transform.decodeStrategy=function(source,options,getConfig){if(options.isomorphic){return fluid.model.transform.isomorphicSchemaStrategy(source,getConfig);}
else if(options.flatSchema){return fluid.model.transform.flatSchemaStrategy(options.flatSchema,getConfig);}};fluid.model.transform.schemaToCreatorStrategy=function(strategy){return function(root,segment,index,segs){if(root[segment]===undefined){var schemaValue=strategy(root,segment,index,segs);return root[segment]=fluid.model.transform.defaultSchemaValue(schemaValue);}};};fluid.model.transform.sequence=function(source,rules,options){for(var i=0;i<rules.length;++i){source=fluid.model.transform(source,rules[i],options);}
return source;};fluid.model.compareByPathLength=function(changea,changeb){var pdiff=changea.path.length-changeb.path.length;return pdiff===0?changea.sequence-changeb.sequence:pdiff;};fluid.model.fireSortedChanges=function(changes,applier){changes.sort(fluid.model.compareByPathLength);fluid.requestChanges(applier,changes);};fluid.model.transformWithRules=function(source,rules,options){options=options||{};var parser={parse:fluid.pathUtil.parseEL,compose:fluid.pathUtil.composePath};var getConfig={parser:parser,strategies:[fluid.model.defaultFetchStrategy]};var schemaStrategy=fluid.model.transform.decodeStrategy(source,options,getConfig);var setConfig={parser:parser,strategies:[fluid.model.defaultFetchStrategy,schemaStrategy?fluid.model.transform.schemaToCreatorStrategy(schemaStrategy):fluid.model.defaultCreatorStrategy]};var expander={source:source,target:schemaStrategy?fluid.model.transform.defaultSchemaValue(schemaStrategy(null,"",0,[""])):{},resolverGetConfig:getConfig,queuedChanges:[],queuedExpanders:[]};fluid.model.transform.makeExpander(expander,fluid.model.transform.handleExpandExpander);expander.applier={fireChangeRequest:function(changeRequest){changeRequest.sequence=expander.queuedChanges.length;expander.queuedChanges.push(changeRequest);}};fluid.bindRequestChange(expander.applier);expander.finalApplier=fluid.makeChangeApplier(expander.target,{resolverSetConfig:setConfig});expander.expand(rules);if(expander.queuedExpanders.length>0){expander.typeStack=[];expander.pathOp=fluid.model.makePathStack(expander,"path");fluid.model.transform.expandWildcards(expander,source);}
fluid.model.fireSortedChanges(expander.queuedChanges,expander.finalApplier);return expander.target;};$.extend(fluid.model.transformWithRules,fluid.model.transform);fluid.model.transform=fluid.model.transformWithRules;fluid.transformOne=function(rules){return{transformOptions:{transformer:"fluid.model.transformWithRules",config:rules}};};fluid.transformMany=function(rules){return{transformOptions:{transformer:"fluid.model.transform.sequence",config:rules}};};})(jQuery,fluid_1_5);var fluid_1_5=fluid_1_5||{};var fluid=fluid||fluid_1_5;(function($,fluid){fluid.thatistBridge=function(name,peer){var togo=function(funcname){var segs=funcname.split(".");var move=peer;for(var i=0;i<segs.length;++i){move=move[segs[i]];}
var args=[this];if(arguments.length===2){args=args.concat($.makeArray(arguments[1]));}
var ret=move.apply(null,args);this.that=function(){return ret;};var type=typeof(ret);return!ret||type==="string"||type==="number"||type==="boolean"||(ret&&ret.length!==undefined)?ret:this;};$.fn[name]=togo;return togo;};fluid.thatistBridge("fluid",fluid);fluid.thatistBridge("fluid_1_5",fluid_1_5);var normalizeTabindexName=function(){return $.browser.msie?"tabIndex":"tabindex";};var canHaveDefaultTabindex=function(elements){if(elements.length<=0){return false;}
return $(elements[0]).is("a, input, button, select, area, textarea, object");};var getValue=function(elements){if(elements.length<=0){return undefined;}
if(!fluid.tabindex.hasAttr(elements)){return canHaveDefaultTabindex(elements)?Number(0):undefined;}
var value=elements.attr(normalizeTabindexName());return Number(value);};var setValue=function(elements,toIndex){return elements.each(function(i,item){$(item).attr(normalizeTabindexName(),toIndex);});};fluid.tabindex=function(target,toIndex){target=$(target);if(toIndex!==null&&toIndex!==undefined){return setValue(target,toIndex);}else{return getValue(target);}};fluid.tabindex.remove=function(target){target=$(target);return target.each(function(i,item){$(item).removeAttr(normalizeTabindexName());});};fluid.tabindex.hasAttr=function(target){target=$(target);if(target.length<=0){return false;}
var togo=target.map(function(){var attributeNode=this.getAttributeNode(normalizeTabindexName());return attributeNode?attributeNode.specified:false;});return togo.length===1?togo[0]:togo;};fluid.tabindex.has=function(target){target=$(target);return fluid.tabindex.hasAttr(target)||canHaveDefaultTabindex(target);};fluid.a11y=$.a11y||{};fluid.a11y.orientation={HORIZONTAL:0,VERTICAL:1,BOTH:2};var UP_DOWN_KEYMAP={next:$.ui.keyCode.DOWN,previous:$.ui.keyCode.UP};var LEFT_RIGHT_KEYMAP={next:$.ui.keyCode.RIGHT,previous:$.ui.keyCode.LEFT};var unwrap=function(element){return element.jquery?element[0]:element;};var makeElementsTabFocussable=function(elements){elements.each(function(idx,item){item=$(item);if(!item.fluid("tabindex.has")||item.fluid("tabindex")<0){item.fluid("tabindex",0);}});};fluid.tabbable=function(target){target=$(target);makeElementsTabFocussable(target);};var CONTEXT_KEY="selectionContext";var NO_SELECTION=-32768;var cleanUpWhenLeavingContainer=function(selectionContext){if(selectionContext.activeItemIndex!==NO_SELECTION){if(selectionContext.options.onLeaveContainer){selectionContext.options.onLeaveContainer(selectionContext.selectables[selectionContext.activeItemIndex]);}else if(selectionContext.options.onUnselect){selectionContext.options.onUnselect(selectionContext.selectables[selectionContext.activeItemIndex]);}}
if(!selectionContext.options.rememberSelectionState){selectionContext.activeItemIndex=NO_SELECTION;}};var drawSelection=function(elementToSelect,handler){if(handler){handler(elementToSelect);}};var eraseSelection=function(selectedElement,handler){if(handler&&selectedElement){handler(selectedElement);}};var unselectElement=function(selectedElement,selectionContext){eraseSelection(selectedElement,selectionContext.options.onUnselect);};var selectElement=function(elementToSelect,selectionContext){unselectElement(selectionContext.selectedElement(),selectionContext);elementToSelect=unwrap(elementToSelect);var newIndex=selectionContext.selectables.index(elementToSelect);if(newIndex===-1){return;}
selectionContext.activeItemIndex=newIndex;drawSelection(elementToSelect,selectionContext.options.onSelect);};var selectableFocusHandler=function(selectionContext){return function(evt){$(evt.target).fluid("tabindex",0);selectElement(evt.target,selectionContext);return evt.stopPropagation();};};var selectableBlurHandler=function(selectionContext){return function(evt){$(evt.target).fluid("tabindex",selectionContext.options.selectablesTabindex);unselectElement(evt.target,selectionContext);return evt.stopPropagation();};};var reifyIndex=function(sc_that){var elements=sc_that.selectables;if(sc_that.activeItemIndex>=elements.length){sc_that.activeItemIndex=(sc_that.options.noWrap?elements.length-1:0);}
if(sc_that.activeItemIndex<0&&sc_that.activeItemIndex!==NO_SELECTION){sc_that.activeItemIndex=(sc_that.options.noWrap?0:elements.length-1);}
if(sc_that.activeItemIndex>=0){fluid.focus(elements[sc_that.activeItemIndex]);}};var prepareShift=function(selectionContext){var selElm=selectionContext.selectedElement();if(selElm){fluid.blur(selElm);}
unselectElement(selectionContext.selectedElement(),selectionContext);if(selectionContext.activeItemIndex===NO_SELECTION){selectionContext.activeItemIndex=-1;}};var focusNextElement=function(selectionContext){prepareShift(selectionContext);++selectionContext.activeItemIndex;reifyIndex(selectionContext);};var focusPreviousElement=function(selectionContext){prepareShift(selectionContext);--selectionContext.activeItemIndex;reifyIndex(selectionContext);};var arrowKeyHandler=function(selectionContext,keyMap,userHandlers){return function(evt){if(evt.which===keyMap.next){focusNextElement(selectionContext);evt.preventDefault();}else if(evt.which===keyMap.previous){focusPreviousElement(selectionContext);evt.preventDefault();}};};var getKeyMapForDirection=function(direction){var keyMap;if(direction===fluid.a11y.orientation.HORIZONTAL){keyMap=LEFT_RIGHT_KEYMAP;}
else if(direction===fluid.a11y.orientation.VERTICAL){keyMap=UP_DOWN_KEYMAP;}
return keyMap;};var tabKeyHandler=function(selectionContext){return function(evt){if(evt.which!==$.ui.keyCode.TAB){return;}
cleanUpWhenLeavingContainer(selectionContext);if(evt.shiftKey){selectionContext.focusIsLeavingContainer=true;}};};var containerFocusHandler=function(selectionContext){return function(evt){var shouldOrig=selectionContext.options.autoSelectFirstItem;var shouldSelect=typeof(shouldOrig)==="function"?shouldOrig():shouldOrig;if(selectionContext.focusIsLeavingContainer){shouldSelect=false;}
if(shouldSelect&&evt.target===selectionContext.container.get(0)){if(selectionContext.activeItemIndex===NO_SELECTION){selectionContext.activeItemIndex=0;}
fluid.focus(selectionContext.selectables[selectionContext.activeItemIndex]);}
return evt.stopPropagation();};};var containerBlurHandler=function(selectionContext){return function(evt){selectionContext.focusIsLeavingContainer=false;return evt.stopPropagation();};};var makeElementsSelectable=function(container,defaults,userOptions){var options=$.extend(true,{},defaults,userOptions);var keyMap=getKeyMapForDirection(options.direction);var selectableElements=options.selectableElements?options.selectableElements:container.find(options.selectableSelector);var that={container:container,activeItemIndex:NO_SELECTION,selectables:selectableElements,focusIsLeavingContainer:false,options:options};that.selectablesUpdated=function(focusedItem){if(typeof(that.options.selectablesTabindex)==="number"){that.selectables.fluid("tabindex",that.options.selectablesTabindex);}
that.selectables.unbind("focus."+CONTEXT_KEY);that.selectables.unbind("blur."+CONTEXT_KEY);that.selectables.bind("focus."+CONTEXT_KEY,selectableFocusHandler(that));that.selectables.bind("blur."+CONTEXT_KEY,selectableBlurHandler(that));if(keyMap&&that.options.noBubbleListeners){that.selectables.unbind("keydown."+CONTEXT_KEY);that.selectables.bind("keydown."+CONTEXT_KEY,arrowKeyHandler(that,keyMap));}
if(focusedItem){selectElement(focusedItem,that);}
else{reifyIndex(that);}};that.refresh=function(){if(!that.options.selectableSelector){fluid.fail("Cannot refresh selectable context which was not initialised by a selector");}
that.selectables=container.find(options.selectableSelector);that.selectablesUpdated();};that.selectedElement=function(){return that.activeItemIndex<0?null:that.selectables[that.activeItemIndex];};if(keyMap&&!that.options.noBubbleListeners){container.keydown(arrowKeyHandler(that,keyMap));}
container.keydown(tabKeyHandler(that));container.focus(containerFocusHandler(that));container.blur(containerBlurHandler(that));that.selectablesUpdated();return that;};fluid.selectable=function(target,options){target=$(target);var that=makeElementsSelectable(target,fluid.selectable.defaults,options);fluid.setScopedData(target,CONTEXT_KEY,that);return that;};fluid.selectable.select=function(target,toSelect){fluid.focus(toSelect);};fluid.selectable.selectNext=function(target){target=$(target);focusNextElement(fluid.getScopedData(target,CONTEXT_KEY));};fluid.selectable.selectPrevious=function(target){target=$(target);focusPreviousElement(fluid.getScopedData(target,CONTEXT_KEY));};fluid.selectable.currentSelection=function(target){target=$(target);var that=fluid.getScopedData(target,CONTEXT_KEY);return $(that.selectedElement());};fluid.selectable.defaults={direction:fluid.a11y.orientation.VERTICAL,selectablesTabindex:-1,autoSelectFirstItem:true,rememberSelectionState:true,selectableSelector:".selectable",selectableElements:null,onSelect:null,onUnselect:null,onLeaveContainer:null,noWrap:false};var checkForModifier=function(binding,evt){if(!binding.modifier){return true;}
var modifierKey=binding.modifier;var isCtrlKeyPresent=modifierKey&&evt.ctrlKey;var isAltKeyPresent=modifierKey&&evt.altKey;var isShiftKeyPresent=modifierKey&&evt.shiftKey;return isCtrlKeyPresent||isAltKeyPresent||isShiftKeyPresent;};var makeActivationHandler=function(binding){return function(evt){var target=evt.target;if(!fluid.enabled(target)){return;}
var code=evt.which?evt.which:evt.keyCode;if(code===binding.key&&binding.activateHandler&&checkForModifier(binding,evt)){var event=$.Event("fluid-activate");$(target).trigger(event,[binding.activateHandler]);if(event.isDefaultPrevented()){evt.preventDefault();}}};};var makeElementsActivatable=function(elements,onActivateHandler,defaultKeys,options){var bindings=[];$(defaultKeys).each(function(index,key){bindings.push({modifier:null,key:key,activateHandler:onActivateHandler});});if(options&&options.additionalBindings){bindings=bindings.concat(options.additionalBindings);}
fluid.initEnablement(elements);for(var i=0;i<bindings.length;++i){var binding=bindings[i];elements.keydown(makeActivationHandler(binding));}
elements.bind("fluid-activate",function(evt,handler){handler=handler||onActivateHandler;return handler?handler(evt):null;});};fluid.activatable=function(target,fn,options){target=$(target);makeElementsActivatable(target,fn,fluid.activatable.defaults.keys,options);};fluid.activate=function(target){$(target).trigger("fluid-activate");};fluid.activatable.defaults={keys:[$.ui.keyCode.ENTER,$.ui.keyCode.SPACE]};})(jQuery,fluid_1_5);var fluid_1_5=fluid_1_5||{};(function($,fluid){fluid.defaults("fluid.viewComponent",{gradeNames:["fluid.littleComponent","fluid.modelComponent","fluid.eventedComponent"],initFunction:"fluid.initView",argumentMap:{container:0,options:1},members:{dom:{expander:{funcName:"fluid.initDomBinder",args:["{that}","{that}.options.selectors"]}}}});fluid.diagnoseFailedView=function(componentName,that,options,args){if(!that&&fluid.hasGrade(options,"fluid.viewComponent")){var container=fluid.wrap(args[1]);var message1="Instantiation of autoInit component with type "+componentName+" failed, since ";if(container.length===0){fluid.fail(message1+"selector \"",args[1],"\" did not match any markup in the document");}else{fluid.fail(message1+" component creator function did not return a value");}}};fluid.checkTryCatchParameter=function(){var location=window.location||{search:"",protocol:"file:"};var GETparams=location.search.slice(1).split('&');return fluid.find(GETparams,function(param){if(param.indexOf("notrycatch")===0){return true;}})===true;};fluid.notrycatch=fluid.checkTryCatchParameter();fluid.wrap=function(obj,userJQuery){userJQuery=userJQuery||$;return((!obj||obj.jquery)?obj:userJQuery(obj));};fluid.unwrap=function(obj){return obj&&obj.jquery&&obj.length===1?obj[0]:obj;};fluid.container=function(containerSpec,fallible,userJQuery){if(userJQuery){containerSpec=fluid.unwrap(containerSpec);}
var container=fluid.wrap(containerSpec,userJQuery);if(fallible&&(!container||container.length===0)){return null;}
if(!container||!container.jquery||container.length!==1){if(typeof(containerSpec)!=="string"){containerSpec=container.selector;}
var count=container.length!==undefined?container.length:0;fluid.fail((count>1?"More than one ("+count+") container elements were":"No container element was")+" found for selector "+containerSpec);}
if(!fluid.isDOMNode(container[0])){fluid.fail("fluid.container was supplied a non-jQueryable element");}
return container;};fluid.createDomBinder=function(container,selectors){var cache={},that={id:fluid.allocateGuid()};var userJQuery=container.constructor;function cacheKey(name,thisContainer){return fluid.allocateSimpleId(thisContainer)+"-"+name;}
function record(name,thisContainer,result){cache[cacheKey(name,thisContainer)]=result;}
that.locate=function(name,localContainer){var selector,thisContainer,togo;selector=selectors[name];thisContainer=localContainer?localContainer:container;if(!thisContainer){fluid.fail("DOM binder invoked for selector "+name+" without container");}
if(!selector){return thisContainer;}
if(typeof(selector)==="function"){togo=userJQuery(selector.call(null,fluid.unwrap(thisContainer)));}else{togo=userJQuery(selector,thisContainer);}
if(togo.get(0)===document){togo=[];}
if(!togo.selector){togo.selector=selector;togo.context=thisContainer;}
togo.selectorName=name;record(name,thisContainer,togo);return togo;};that.fastLocate=function(name,localContainer){var thisContainer=localContainer?localContainer:container;var key=cacheKey(name,thisContainer);var togo=cache[key];return togo?togo:that.locate(name,localContainer);};that.clear=function(){cache={};};that.refresh=function(names,localContainer){var thisContainer=localContainer?localContainer:container;if(typeof names==="string"){names=[names];}
if(thisContainer.length===undefined){thisContainer=[thisContainer];}
for(var i=0;i<names.length;++i){for(var j=0;j<thisContainer.length;++j){that.locate(names[i],thisContainer[j]);}}};that.resolvePathSegment=that.locate;return that;};fluid.expectFilledSelector=function(result,message){if(result&&result.length===0&&result.jquery){fluid.fail(message+": selector \""+result.selector+"\" with name "+result.selectorName+" returned no results in context "+fluid.dumpEl(result.context));}};fluid.initView=function(componentName,containerSpec,userOptions,localOptions){var container=fluid.container(containerSpec,true);fluid.expectFilledSelector(container,"Error instantiating component with name \""+componentName);if(!container){return null;}
var receiver=function(that,options,strategy){that.container=container;};var that=fluid.initLittleComponent(componentName,userOptions,localOptions||{gradeNames:["fluid.viewComponent"]},receiver);if(!that.dom){fluid.initDomBinder(that);}
var userJQuery=that.options.jQuery;fluid.log("Constructing view component "+componentName+" with container "+container.constructor.expando+
(userJQuery?" user jQuery "+userJQuery.expando:"")+" env: "+$.expando);return that;};fluid.initDomBinder=function(that,selectors){that.dom=fluid.createDomBinder(that.container,selectors||that.options.selectors||{});that.locate=that.dom.locate;return that.dom;};fluid.findAncestor=function(element,test){element=fluid.unwrap(element);while(element){if(test(element)){return element;}
element=element.parentNode;}};fluid.findForm=function(node){return fluid.findAncestor(node,function(element){return element.nodeName.toLowerCase()==="form";});};fluid.each(["text","html"],function(method){fluid[method]=function(node,newValue){node=$(node);return newValue===undefined?node[method]():node[method](newValue);};});fluid.value=function(nodeIn,newValue){var node=fluid.unwrap(nodeIn);var multiple=false;if(node.nodeType===undefined&&node.length>1){node=node[0];multiple=true;}
if("input"!==node.nodeName.toLowerCase()||!/radio|checkbox/.test(node.type)){return newValue===undefined?$(node).val():$(node).val(newValue);}
var name=node.name;if(name===undefined){fluid.fail("Cannot acquire value from node "+fluid.dumpEl(node)+" which does not have name attribute set");}
var elements;if(multiple){elements=nodeIn;}else{elements=node.ownerDocument.getElementsByName(name);var scope=fluid.findForm(node);elements=$.grep(elements,function(element){if(element.name!==name){return false;}
return!scope||fluid.dom.isContainer(scope,element);});}
if(newValue!==undefined){if(typeof(newValue)==="boolean"){newValue=(newValue?"true":"false");}
$.each(elements,function(){this.checked=(newValue instanceof Array?$.inArray(this.value,newValue)!==-1:newValue===this.value);});}else{var checked=$.map(elements,function(element){return element.checked?element.value:null;});return node.type==="radio"?checked[0]:checked;}};fluid.jById=function(id,dokkument){dokkument=dokkument&&dokkument.nodeType===9?dokkument:document;var element=fluid.byId(id,dokkument);var togo=element?$(element):[];togo.selector="#"+id;togo.context=dokkument;return togo;};fluid.byId=function(id,dokkument){dokkument=dokkument&&dokkument.nodeType===9?dokkument:document;var el=dokkument.getElementById(id);if(el){if(el.id!==id){fluid.fail("Problem in document structure - picked up element "+
fluid.dumpEl(el)+" for id "+id+" without this id - most likely the element has a name which conflicts with this id");}
return el;}else{return null;}};fluid.getId=function(element){return fluid.unwrap(element).id;};fluid.allocateSimpleId=function(element){var simpleId="fluid-id-"+fluid.allocateGuid();if(!element){return simpleId;}
element=fluid.unwrap(element);if(!element.id){element.id=simpleId;}
return element.id;};fluid.defaults("fluid.ariaLabeller",{labelAttribute:"aria-label",liveRegionMarkup:"<div class=\"liveRegion fl-offScreen-hidden\" aria-live=\"polite\"></div>",liveRegionId:"fluid-ariaLabeller-liveRegion",events:{generateLiveElement:"unicast"},listeners:{generateLiveElement:"fluid.ariaLabeller.generateLiveElement"}});fluid.ariaLabeller=function(element,options){var that=fluid.initView("fluid.ariaLabeller",element,options);that.update=function(newOptions){newOptions=newOptions||that.options;that.container.attr(that.options.labelAttribute,newOptions.text);if(newOptions.dynamicLabel){var live=fluid.jById(that.options.liveRegionId);if(live.length===0){live=that.events.generateLiveElement.fire(that);}
live.text(newOptions.text);}};that.update();return that;};fluid.ariaLabeller.generateLiveElement=function(that){var liveEl=$(that.options.liveRegionMarkup);liveEl.prop("id",that.options.liveRegionId);$("body").append(liveEl);return liveEl;};var LABEL_KEY="aria-labelling";fluid.getAriaLabeller=function(element){element=$(element);var that=fluid.getScopedData(element,LABEL_KEY);return that;};fluid.updateAriaLabel=function(element,text,options){options=$.extend({},options||{},{text:text});var that=fluid.getAriaLabeller(element);if(!that){that=fluid.ariaLabeller(element,options);fluid.setScopedData(element,LABEL_KEY,that);}else{that.update(options);}
return that;};var dismissList={};$(document).click(function(event){var target=event.target;while(target){if(dismissList[target.id]){return;}
target=target.parentNode;}
fluid.each(dismissList,function(dismissFunc,key){dismissFunc(event);delete dismissList[key];});});fluid.globalDismissal=function(nodes,dismissFunc){fluid.each(nodes,function(node){var id=fluid.unwrap(node).ownerDocument===document?fluid.allocateSimpleId(node):fluid.allocateGuid();if(dismissFunc){dismissList[id]=dismissFunc;}
else{delete dismissList[id];}});};fluid.now=function(){return Date.now?Date.now():(new Date()).getTime();};fluid.deadMansBlur=function(control,options){var that=fluid.initLittleComponent("fluid.deadMansBlur",options);that.blurPending=false;that.lastCancel=0;that.canceller=function(event){fluid.log("Cancellation through "+event.type+" on "+fluid.dumpEl(event.target));that.lastCancel=fluid.now();that.blurPending=false;};that.noteProceeded=function(){fluid.globalDismissal(that.options.exclusions);};that.reArm=function(){fluid.globalDismissal(that.options.exclusions,that.proceed);};that.addExclusion=function(exclusions){fluid.globalDismissal(exclusions,that.proceed);};that.proceed=function(event){fluid.log("Direct proceed through "+event.type+" on "+fluid.dumpEl(event.target));that.blurPending=false;that.options.handler(control);};fluid.each(that.options.exclusions,function(exclusion){exclusion=$(exclusion);fluid.each(exclusion,function(excludeEl){$(excludeEl).bind("focusin",that.canceller).bind("fluid-focus",that.canceller).click(that.canceller).mousedown(that.canceller);});});if(!that.options.cancelByDefault){$(control).bind("focusout",function(event){fluid.log("Starting blur timer for element "+fluid.dumpEl(event.target));var now=fluid.now();fluid.log("back delay: "+(now-that.lastCancel));if(now-that.lastCancel>that.options.backDelay){that.blurPending=true;}
setTimeout(function(){if(that.blurPending){that.options.handler(control);}},that.options.delay);});}
else{that.reArm();}
return that;};fluid.defaults("fluid.deadMansBlur",{delay:150,backDelay:100});})(jQuery,fluid_1_5);var fluid_1_5=fluid_1_5||{};(function($,fluid){fluid.visitComponentChildren=function(that,visitor,options,path,i){var instantiator=fluid.getInstantiator(that);for(var name in that){var newPath=instantiator.composePath(path,name);var component=that[name];if(!component||!component.typeName||(component.id&&options.visited&&options.visited[component.id])){continue;}
if(options.visited){options.visited[component.id]=true;}
if(visitor(component,name,newPath,path,i)){return true;}
if(!options.flat){fluid.visitComponentChildren(component,visitor,options,newPath);}}};fluid.getMemberNames=function(instantiator,thatStack){var path=instantiator.idToPath(thatStack[thatStack.length-1].id);var segs=fluid.model.parseEL(path);segs.unshift.apply(segs,fluid.generate(thatStack.length-segs.length,""));return segs;};var visitComponents=function(instantiator,thatStack,visitor,options){options=options||{visited:{},flat:true,instantiator:instantiator};var memberNames=fluid.getMemberNames(instantiator,thatStack);for(var i=thatStack.length-1;i>=0;--i){var that=thatStack[i],path;if(that.typeName){options.visited[that.id]=true;path=instantiator.idToPath[that.id];if(visitor(that,memberNames[i],path,path,i)){return;}}
if(fluid.visitComponentChildren(that,visitor,options,path,i)){return;}}};fluid.mountStrategy=function(prefix,root,toMount,targetPrefix){var offset=prefix.length;return function(target,name,i,segs){if(i<=prefix.length){return;}
for(var j=0;j<prefix.length;++j){if(segs[j]!==prefix[j]){return;}}
return toMount(target,name,i-prefix.length,segs.slice(offset));}};fluid.invokerFromRecord=function(invokerec,name,that){fluid.pushActivity("makeInvoker","beginning instantiation of invoker with name %name and record %record as child of %that",{name:name,record:invokerec,that:that});var invoker=fluid.makeInvoker(that,invokerec,name);fluid.popActivity();return invoker;};fluid.memberFromRecord=function(memberrec,name,that){var value=fluid.expandOptions(memberrec,that);return value;};fluid.recordStrategy=function(that,options,optionsStrategy,recordPath,recordMaker,prefix){prefix=prefix||[];return{strategy:function(target,name,i,segs){if(i!==1){return;}
var record=fluid.driveStrategy(options,[recordPath,name],optionsStrategy);if(record===undefined){return;}
fluid.set(target,[name],fluid.inEvaluationMarker);var member=recordMaker(record,name,that);fluid.set(target,[name],member);return member;},initter:function(){var records=fluid.driveStrategy(options,recordPath,optionsStrategy)||{};for(var name in records){fluid.getForComponent(that,prefix.concat([name]));}}};};fluid.instantiateFirers=function(that,options){var shadow=fluid.shadowForComponent(that);var initter=fluid.get(shadow,["eventStrategyBlock","initter"])||fluid.identity;initter();};fluid.makeDistributionRecord=function(sourceRecord,sourcePath,targetPath,exclusions,offset,sourceType){offset=offset||0;sourceType=sourceType||"distribution";var source=fluid.copy(fluid.get(sourceRecord,sourcePath));fluid.each(exclusions,function(exclusion){fluid.model.applyChangeRequest(source,{path:exclusion,type:"DELETE"});});var options={};fluid.model.applyChangeRequest(options,{path:targetPath,type:"ADD",value:source});return{options:options,recordType:sourceType,priority:fluid.mergeRecordTypes.distribution+offset};};fluid.filterBlocks=function(sourceBlocks,sourcePath,targetPath,exclusions){var togo=[],offset=0;fluid.each(sourceBlocks,function(block){var source=fluid.get(block.source,sourcePath);if(source){togo.push(fluid.makeDistributionRecord(block.source,sourcePath,targetPath,exclusions,offset++,block.recordType));var rescued=$.extend({},source);fluid.model.applyChangeRequest(block.source,{path:sourcePath,type:"DELETE"});fluid.each(exclusions,function(exclusion){var orig=fluid.get(rescued,exclusion);fluid.set(block.source,sourcePath.concat(exclusion),orig);});}});return togo;};fluid.matchIoCSelector=function(selector,thatStack,shadows,memberNames,i){var thatpos=thatStack.length-1;var selpos=selector.length-1;while(true){var mustMatchHere=thatpos===thatStack.length-1||selector[selpos].child;var that=thatStack[thatpos];var selel=selector[selpos];var match=true;for(var j=0;j<selel.predList.length;++j){var pred=selel.predList[j];if(pred.context&&!(shadows[thatpos].contextHash[pred.context]||memberNames[thatpos]===pred.context)){match=false;break;}
if(pred.id&&that.id!==pred.id){match=false;break;}}
if(match){if(selpos===0){return true;}
--thatpos;--selpos;}
else{if(mustMatchHere){return false;}
else{--thatpos;}}
if(thatpos<i){return false;}}};fluid.collectDistributions=function(distributedBlocks,distribution,thatStack,shadows,memberNames,i){if(fluid.matchIoCSelector(distribution.selector,thatStack,shadows,memberNames,i)){distributedBlocks.push.apply(distributedBlocks,distribution.blocks);}};fluid.receiveDistributions=function(that){var instantiator=fluid.getInstantiator(that);var thatStack=instantiator.getThatStack(that);var memberNames=fluid.getMemberNames(instantiator,thatStack);var distributedBlocks=[];var shadows=fluid.transform(thatStack,function(thisThat){return instantiator.idToShadow[thisThat.id];});for(var i=0;i<thatStack.length;++i){fluid.each(shadows[i].distributions,function(distribution){fluid.collectDistributions(distributedBlocks,distribution,thatStack,shadows,memberNames,i);});}
fluid.applyDistributions(that,distributedBlocks,shadow);};fluid.applyDistributions=function(that,preBlocks,targetShadow){var distributedBlocks=fluid.transform(preBlocks,function(preBlock){return fluid.generateExpandBlock(preBlock,that,targetShadow.mergePolicy);});var mergeOptions=targetShadow.mergeOptions;mergeOptions.mergeBlocks.push.apply(mergeOptions.mergeBlocks,distributedBlocks);mergeOptions.updateBlocks();};fluid.parseExpectedOptionsPath=function(path,role){var segs=fluid.model.parseEL(path);if(segs.length>1&&segs[0]!=="options"){fluid.fail("Error in options distribution record ",record," - only "+role+" paths beginning with \"options\" are supported");}
return segs.slice(1);};fluid.isIoCSSSelector=function(context){return context.indexOf(" ")!==-1;};fluid.pushDistributions=function(targetHead,selector,blocks){var targetShadow=fluid.shadowForComponent(targetHead);var id=fluid.allocateGuid();var distributions=(targetShadow.distributions=targetShadow.distributions||[]);distributions.push({id:id,selector:selector,blocks:blocks});return id;};fluid.clearDistributions=function(targetHead,id){var targetShadow=fluid.shadowForComponent(targetHead);fluid.remove_if(targetShadow.distributions,function(distribution){return distribution.id===id;});};fluid.extractSelectorHead=function(parsedSelector){var predList=parsedSelector[0].predList;var context=predList[0].context;predList.length=0;return context;};fluid.undistributableOptions=["gradeNames","distributeOptions","returnedPath","argumentMap","initFunction","mergePolicy","progressiveCheckerOptions"];fluid.distributeOptions=function(that,optionsStrategy){var records=fluid.makeArray(fluid.driveStrategy(that.options,"distributeOptions",optionsStrategy));fluid.each(records,function(record){var targetRef=fluid.parseContextReference(record.target);var targetComp,selector;if(fluid.isIoCSSSelector(targetRef.context)){selector=fluid.parseSelector(targetRef.context,fluid.IoCSSMatcher);var headContext=fluid.extractSelectorHead(selector);if(headContext!=="that"){fluid.fail("Downwards options distribution not supported from component other than \"that\"");}
targetComp=that;}
else{targetComp=fluid.resolveContext(targetRef.context,that);if(!targetComp){fluid.fail("Error in options distribution record ",record," - could not resolve context selector {"+targetRef.context+"} to a root component");}}
var segs=fluid.parseExpectedOptionsPath(targetRef.path,"target");var preBlocks;if(record.record){preBlocks=[(fluid.makeDistributionRecord(record.record,[],segs,[],0))];}
else{var thatShadow=fluid.shadowForComponent(that);var source=fluid.parseContextReference(record.source||"{that}.options");if(source.context!=="that"){fluid.fail("Error in options distribution record ",record," only a context of {that} is supported");}
var sourcePath=fluid.parseExpectedOptionsPath(source.path,"source");var fullExclusions=record.exclusions.concat(sourcePath.length===0?fluid.undistributableOptions:[]);var exclusions=fluid.transform(fullExclusions,function(exclusion){return fluid.model.parseEL(exclusion);});preBlocks=fluid.filterBlocks(thatShadow.mergeOptions.mergeBlocks,sourcePath,segs,exclusions);thatShadow.mergeOptions.updateBlocks();}
if(selector){fluid.pushDistributions(targetComp,selector,preBlocks);}
else{var targetShadow=fluid.shadowForComponent(targetComp);fluid.applyDistributions(that,preBlocks,targetShadow);}});};fluid.cacheShadowGrades=function(that,shadow){var contextHash={};fluid.each(that.options.gradeNames,function(gradeName){contextHash[gradeName]=true;contextHash[fluid.computeNickName(gradeName)]=true;});contextHash[that.nickName]=true;shadow.contextHash=contextHash;};fluid.deliverOptionsStrategy=function(that,target,mergeOptions){var shadow=fluid.shadowForComponent(that,shadow);fluid.cacheShadowGrades(that,shadow);shadow.mergeOptions=mergeOptions;fluid.receiveDistributions(that);fluid.distributeOptions(that,mergeOptions.strategy);};fluid.resolveReturnedPath=function(returnedPath,that){var shadow=fluid.shadowForComponent(that);return shadow&&shadow.path!==""?null:returnedPath;};fluid.computeDynamicGrades=function(that,shadow,strategy){var gradeNames=that.options.gradeNames;var defaultsBlock=fluid.findMergeBlocks(shadow.mergeOptions.mergeBlocks,"defaults")[0];var dynamicGrades=fluid.remove_if(gradeNames,function(gradeName){return gradeName.charAt(0)==="{"||!fluid.hasGrade(defaultsBlock.target,gradeName);},[]);var resolved=[];fluid.each(dynamicGrades,function(dynamicGrade){var func=fluid.expandOptions(dynamicGrade,that);resolved=resolved.concat(typeof(func)==="function"?func():func);});if(resolved.length!==0){gradeNames.push.apply(gradeNames,resolved);fluid.unique(gradeNames.sort());fluid.cacheShadowGrades(that,shadow);var baseDefaults=fluid.rawDefaults(that.typeName);var otherGrades=fluid.makeArray(gradeNames);fluid.remove_if(otherGrades,function(gradeName){return gradeName===that.typeName;});var newDefaults=fluid.getGradedDefaults(baseDefaults,that.typeName,otherGrades);var defaultsBlock=fluid.findMergeBlocks(shadow.mergeOptions.mergeBlocks,"defaults")[0];defaultsBlock.source=newDefaults;shadow.mergeOptions.updateBlocks();}};fluid.computeComponentAccessor=function(that){var shadow=fluid.shadowForComponent(that);var options=that.options;var strategy=shadow.mergeOptions.strategy;var optionsStrategy=fluid.mountStrategy(["options"],options,strategy);shadow.invokerStrategy=fluid.recordStrategy(that,options,strategy,"invokers",fluid.invokerFromRecord);shadow.eventStrategyBlock=fluid.recordStrategy(that,options,strategy,"events",fluid.eventFromRecord,["events"]);var eventStrategy=fluid.mountStrategy(["events"],that,shadow.eventStrategyBlock.strategy,["events"]);shadow.memberStrategy=fluid.recordStrategy(that,options,strategy,"members",fluid.memberFromRecord);shadow.getConfig={strategies:[fluid.model.funcResolverStrategy,fluid.makeGingerStrategy(that),optionsStrategy,shadow.invokerStrategy.strategy,shadow.memberStrategy.strategy,eventStrategy]};fluid.computeDynamicGrades(that,shadow,strategy,shadow.mergeOptions.mergeBlocks);return shadow.getConfig;};fluid.shadowForComponent=function(component){var instantiator=fluid.getInstantiator(component);return shadow=instantiator&&component?instantiator.idToShadow[component.id]:null;};fluid.getForComponent=function(component,path){var shadow=fluid.shadowForComponent(component);var getConfig=shadow?shadow.getConfig:undefined;return fluid.get(component,path,getConfig);};fluid.makeGingerStrategy=function(that){var instantiator=fluid.getInstantiator(that);return function(component,thisSeg,index,segs){var atval=component[thisSeg];if(atval===fluid.inEvaluationMarker&&index===segs.length){fluid.fail("Error in component configuration - a circular reference was found during evaluation of path segment \""+thisSeg
+"\": for more details, see the activity records following this message in the console, or issue fluid.setLogging(fluid.logLevel.TRACE) when running your application");}
if(index>1){return atval;}
if(atval===undefined){var parentPath=instantiator.idToShadow[component.id].path;var childPath=fluid.composePath(parentPath,thisSeg);atval=instantiator.pathToComponent[childPath];}
if(atval===undefined){if(fluid.getForComponent(component,["options","components",thisSeg])){fluid.initDependent(component,thisSeg);atval=component[thisSeg];}}
return atval;};};fluid.filterBuiltinGrades=function(gradeNames){return fluid.remove_if(fluid.makeArray(gradeNames),function(gradeName){return/autoInit|fluid.littleComponent|fluid.modelComponent|fluid.eventedComponent|fluid.viewComponent|fluid.typeFount/.test(gradeName);});};fluid.dumpGradeNames=function(that){return that.options&&that.options.gradeNames?" gradeNames: "+JSON.stringify(fluid.filterBuiltinGrades(that.options.gradeNames)):"";};fluid.dumpThat=function(that){return"{ typeName: \""+that.typeName+"\""+
fluid.dumpGradeNames(that)+" id: "+that.id+"}";};fluid.dumpThatStack=function(thatStack,instantiator){var togo=fluid.transform(thatStack,function(that){var path=instantiator.idToPath(that.id);return fluid.dumpThat(that)+(path?(" - path: "+path):"");});return togo.join("\n");};var localRecordExpected=/arguments|options|container/;fluid.resolveContext=function(context,that){var instantiator=fluid.getInstantiator(that);if(context==="instantiator"){return instantiator;}
else if(context==="that"){return that;}
var foundComponent;var thatStack=instantiator.getFullStack(that);visitComponents(instantiator,thatStack,function(component,name){var shadow=fluid.shadowForComponent(component);if(context===name||shadow&&shadow.contextHash&&shadow.contextHash[context]||context===component.typeName||context===component.nickName){foundComponent=component;return true;}
if(fluid.getForComponent(component,["options","components",context,"type"])&&!component[context]){foundComponent=fluid.getForComponent(component,context);return true;}});return foundComponent;};fluid.makeStackFetcher=function(parentThat,localRecord){var fetcher=function(parsed){var context=parsed.context;if(localRecord&&localRecordExpected.test(context)){var fetched=fluid.get(localRecord[context],parsed.path);return context==="arguments"?fetched:{marker:context==="options"?fluid.EXPAND:fluid.EXPAND_NOW,value:fetched};}
var foundComponent=fluid.resolveContext(context,parentThat);if(!foundComponent&&parsed.path!==""){var ref=fluid.renderContextReference(parsed);fluid.fail("Failed to resolve reference "+ref+" - could not match context with name "
+context+" from component leaf ",parentThat);}
return fluid.getForComponent(foundComponent,parsed.path);};return fetcher;};fluid.makeStackResolverOptions=function(parentThat,localRecord){return $.extend(fluid.copy(fluid.defaults("fluid.makeExpandOptions")),{fetcher:fluid.makeStackFetcher(parentThat,localRecord),contextThat:parentThat});};fluid.clearListeners=function(shadow){fluid.each(shadow.listeners,function(rec){rec.event.removeListener(rec.listener);});delete shadow.listeners;};var idToInstantiator={};fluid.instantiator=function(freeInstantiator){var that={id:fluid.allocateGuid(),nickName:"instantiator",pathToComponent:{},idToShadow:{},composePath:fluid.composePath};that.idToPath=function(id){var shadow=that.idToShadow[id];return shadow?shadow.path:"";};that.recordListener=function(event,listener,source){var shadow=that.idToShadow[source.id];var listeners=shadow.listeners;if(!listeners){listeners=shadow.listeners=[];}
listeners.push({event:event,listener:listener});};that.getThatStack=function(component){var shadow=that.idToShadow[component.id];if(shadow){var path=shadow.path;var parsed=fluid.model.parseEL(path);var togo=fluid.transform(parsed,function(value,i){var parentPath=fluid.model.composeSegments.apply(null,parsed.slice(0,i+1));return that.pathToComponent[parentPath];});var root=that.pathToComponent[""];if(root){togo.unshift(root);}
return togo;}
else{return[component];}};that.getEnvironmentalStack=function(){var togo=[fluid.staticEnvironment];if(!freeInstantiator){togo.push(fluid.globalThreadLocal());}
return togo;};that.getFullStack=function(component){var thatStack=component?that.getThatStack(component):[];return that.getEnvironmentalStack().concat(thatStack);};function recordComponent(component,path,created){if(created){idToInstantiator[component.id]=that;var shadow=that.idToShadow[component.id]={};shadow.path=path;}
if(that.pathToComponent[path]){fluid.fail("Error during instantiation - path "+path+" which has just created component "+fluid.dumpThat(component)
+" has already been used for component "+fluid.dumpThat(that.pathToComponent[path])+" - this is a circular instantiation or other oversight."
+" Please clear the component using instantiator.clearComponent() before reusing the path.");}
that.pathToComponent[path]=component;}
that.recordRoot=function(component){if(component&&component.id&&!that.pathToComponent[""]){recordComponent(component,"",true);}};that.recordKnownComponent=function(parent,component,name,created){var parentPath=that.idToShadow[parent.id].path;var path=that.composePath(parentPath,name);recordComponent(component,path,created);};that.clearComponent=function(component,name,child,options,noModTree,path){var record=that.idToShadow[component.id].path;options=options||{flat:true,instantiator:that};child=child||component[name];path=path||record;if(path===undefined){fluid.fail("Cannot clear component "+name+" from component ",component," which was not created by this instantiator");}
fluid.fireEvent(child,"events.onClear",[child,name,component]);var childPath=that.composePath(path,name);var childRecord=that.idToShadow[child.id];if(childRecord&&childRecord.path===childPath){fluid.fireEvent(child,"events.onDestroy",[child,name,component]);fluid.clearListeners(childRecord);fluid.visitComponentChildren(child,function(gchild,gchildname,newPath,parentPath){that.clearComponent(child,gchildname,null,options,true,parentPath);},options,childPath);delete that.idToShadow[child.id];delete idToInstantiator[child.id];}
delete that.pathToComponent[childPath];if(!noModTree){delete component[name];}};return that;};fluid.freeInstantiator=fluid.instantiator(true);fluid.getInstantiator=function(component){return component&&idToInstantiator[component.id]||fluid.freeInstantiator;};fluid.expandOptions=function(args,that,mergePolicy,localRecord,outerExpandOptions){if(!args){return args;}
fluid.pushActivity("expandOptions","expanding options %args for component %that ",{that:that,args:args});var expandOptions=fluid.makeStackResolverOptions(that,localRecord);expandOptions.mergePolicy=mergePolicy;var expanded=outerExpandOptions&&outerExpandOptions.defer?fluid.makeExpandOptions(args,expandOptions):fluid.expand(args,expandOptions);fluid.popActivity();return expanded;};fluid.localRecordExpected=["type","options","args","mergeOptions","createOnEvent","priority","recordType"];fluid.checkComponentRecord=function(defaults,localRecord){var expected=fluid.arrayToHash(fluid.localRecordExpected);fluid.each(defaults.argumentMap,function(value,key){expected[key]=true;});fluid.each(localRecord,function(value,key){if(!expected[key]){fluid.fail("Probable error in subcomponent record - key \""+key+"\" found, where the only legal options are "+
fluid.keys(expected).join(", "));}});};fluid.pushDemands=function(list,demands){demands=fluid.makeArray(demands);var thisp=fluid.mergeRecordTypes.demands;function push(rec){rec.recordType="demands";rec.priority=thisp++;list.push(rec);}
for(var i=0;i<demands.length;++i){var thisd=demands[i];if(thisd.options){push(thisd);}
else if(thisd.mergeOptions){var mergeOptions=fluid.makeArray(thisd.mergeOptions);fluid.each(mergeOptions,function(record){push({options:record});});}
else{fluid.fail("Uninterpretable demands record without options or mergeOptions ",thisd);}}};fluid.mergeRecordsToList=function(mergeRecords){var list=[];fluid.each(mergeRecords,function(value,key){value.recordType=key;if(key!=="demands"){if(!value.options){return;}
value.priority=fluid.mergeRecordTypes[key];if(value.priority===undefined){fluid.fail("Merge record with unrecognised type "+key+": ",value);}
list.push(value);}
else{fluid.pushDemands(list,value);}});return list;};var addPolicyBuiltins=function(policy){fluid.each(["gradeNames","mergePolicy","argumentMap","components","members","invokers","events","listeners","distributeOptions","transformOptions"],function(key){fluid.set(policy,[key,"*","noexpand"],true);});return policy;};fluid.generateExpandBlock=function(record,that,mergePolicy){var expanded=fluid.expandOptions(record.options,that,mergePolicy,null,{defer:true});expanded.priority=record.priority;expanded.recordType=record.recordType;return expanded;};var expandComponentOptionsImpl=function(mergePolicy,defaults,userOptions,that){var defaultCopy=fluid.copy(defaults);addPolicyBuiltins(mergePolicy);var shadow=fluid.shadowForComponent(that);shadow.mergePolicy=mergePolicy;var mergeRecords={defaults:{options:defaultCopy}};if(userOptions){if(userOptions.marker===fluid.EXPAND){$.extend(mergeRecords,userOptions.mergeRecords);if(mergeRecords.subcomponentRecord){fluid.checkComponentRecord(defaults,mergeRecords.subcomponentRecord);}}
else{mergeRecords.user={options:userOptions};}}
var expandList=fluid.mergeRecordsToList(mergeRecords);var togo=fluid.transform(expandList,function(value){return fluid.generateExpandBlock(value,that,mergePolicy);});return togo;};fluid.expandComponentOptions=function(mergePolicy,defaults,userOptions,that){var instantiator=userOptions&&userOptions.marker===fluid.EXPAND&&userOptions.memberName!==undefined?userOptions.instantiator:null;var fresh;if(!instantiator){instantiator=fluid.instantiator();fresh=true;fluid.log("Created new instantiator with id "+instantiator.id+" in order to operate on component "+(that?that.typeName:"[none]"));}
fluid.pushActivity("expandComponentOptions","expanding component options %options with record %record for component %that",{options:userOptions&&userOptions.mergeRecords,record:userOptions,that:that});if(fresh){instantiator.recordRoot(that);}
else{instantiator.recordKnownComponent(userOptions.parentThat,that,userOptions.memberName,true);}
var togo=expandComponentOptionsImpl(mergePolicy,defaults,userOptions,that);fluid.popActivity();return togo;};fluid.argMapToDemands=function(argMap){var togo=[];fluid.each(argMap,function(value,key){togo[value]="{"+key+"}";});return togo;};fluid.makePassArgsSpec=function(initArgs){return fluid.transform(initArgs,function(arg,index){return"{arguments}."+index;});};fluid.pushDemandSpec=function(record,options,mergeOptions){if(options&&options!=="{options}"){record.push({options:options});}
if(mergeOptions){record.push({mergeOptions:mergeOptions});}};fluid.embodyDemands=function(parentThat,demandspec,initArgs,options){options=options||{};if(demandspec.mergeOptions&&demandspec.options){fluid.fail("demandspec ",demandspec," is invalid - cannot specify literal options together with mergeOptions");}
if(demandspec.transformOptions){demandspec.options=$.extend(true,{},demandspec.options,{transformOptions:demandspec.transformOptions});}
var demands=fluid.makeArray(demandspec.args);var upDefaults=fluid.defaults(demandspec.funcName);var argMap=upDefaults?upDefaults.argumentMap:null;var inferMap=false;if(!argMap&&(upDefaults||(options&&options.componentRecord))&&!options.passArgs){inferMap=true;if(demands.length<2){argMap=fluid.rawDefaults("fluid.littleComponent").argumentMap;}
else{var optionpos=$.inArray("{options}",demands);if(optionpos===-1){optionpos=demands.length-1;}
argMap={options:optionpos};}}
options=options||{};if(demands.length===0){if(argMap){demands=fluid.argMapToDemands(argMap);}
else if(options.passArgs){demands=fluid.makePassArgsSpec(initArgs);}}
var localRecord=$.extend({"arguments":initArgs},fluid.censorKeys(options.componentRecord,["type"]));fluid.each(argMap,function(index,name){if(initArgs.length>0){localRecord[name]=localRecord["arguments"][index];}
if(demandspec[name]!==undefined&&localRecord[name]===undefined){localRecord[name]=demandspec[name];}});var mergeRecords={};if(options.componentRecord!==undefined){mergeRecords.subcomponentRecord=$.extend({},options.componentRecord);}
var expandOptions=fluid.makeStackResolverOptions(parentThat,localRecord);var args=[];if(demands){for(var i=0;i<demands.length;++i){var arg=demands[i];if(fluid.isMarker(arg)&&arg.value===fluid.COMPONENT_OPTIONS.value){arg="{options}";if(inferMap){argMap={options:i};}}
if(typeof(arg)==="string"){if(arg.charAt(0)==="@"){var argpos=arg.substring(1);arg="{arguments}."+argpos;}}
if(!argMap||argMap.options!==i){args[i]=fluid.expand(arg,expandOptions);}
else{if(typeof(arg)==="object"&&!arg.targetTypeName){arg.targetTypeName=demandspec.funcName;}
mergeRecords.demands=[];fluid.each(demandspec.backSpecs.reverse(),function(backSpec){fluid.pushDemandSpec(mergeRecords.demands,backSpec.options,backSpec.mergeOptions);});fluid.pushDemandSpec(mergeRecords.demands,demandspec.options||arg,demandspec.mergeOptions);if(initArgs.length>0){mergeRecords.user={options:localRecord.options};}
args[i]={marker:fluid.EXPAND,mergeRecords:mergeRecords,instantiator:fluid.getInstantiator(parentThat),parentThat:parentThat,memberName:options.memberName};}
if(args[i]&&fluid.isMarker(args[i].marker,fluid.EXPAND_NOW)){args[i]=fluid.expand(args[i].value,expandOptions);}}}
else{args=initArgs?initArgs:[];}
var togo={args:args,funcName:demandspec.funcName};return togo;};fluid.fabricateDestroyMethod=function(that,name,instantiator,child){return function(){instantiator.clearComponent(that,name,child);};};fluid.initDependent=function(that,name,directArgs){if(that[name]){return;}
directArgs=directArgs||[];var component=that.options.components[name];fluid.pushActivity("initDependent","instantiating dependent component with name \"%name\" with record %record as child of %parent",{name:name,record:component,parent:that});var instance;var instantiator=idToInstantiator[that.id];if(typeof(component)==="string"){instance=fluid.expandOptions(component,that);instantiator.recordKnownComponent(that,instance,name,false);}
else if(component.type){var type=fluid.expandOptions(component.type,that);if(!type){fluid.fail("Error in subcomponent record: ",component.type," could not be resolved to a type for component ",name," of parent ",that);}
var invokeSpec=fluid.resolveDemands(that,[type,name],directArgs,{componentRecord:component,memberName:name});instance=fluid.initSubcomponentImpl(that,{type:invokeSpec.funcName},invokeSpec.args);var path=instantiator.composePath(instantiator.idToPath(that.id),name);var existing=instantiator.pathToComponent[path];if(existing&&existing!==instance){instantiator.clearComponent(that,name,existing);}
if(instance&&instance.typeName&&instance.id&&instance!==existing){instantiator.recordKnownComponent(that,instance,name,true);}
instance.destroy=fluid.fabricateDestroyMethod(that,name,instantiator,instance);}
else{fluid.fail("Unrecognised material in place of subcomponent "+name+" - no \"type\" field found");}
that[name]=instance;fluid.fireEvent(instance,"events.onAttach",[instance,name,that]);fluid.popActivity();};fluid.bindDeferredComponent=function(that,componentName,component){var events=fluid.makeArray(component.createOnEvent);fluid.each(events,function(eventName){var event=eventName.charAt(0)==="{"?fluid.expandOptions(eventName,that):that.events[eventName];event.addListener(function(){fluid.pushActivity("initDeferred","instantiating deferred component %componentName of parent %that due to event %eventName",{componentName:componentName,that:that,eventName:eventName});if(that[componentName]){var instantiator=idToInstantiator[that.id];instantiator.clearComponent(that,componentName);}
fluid.initDependent(that,componentName);fluid.popActivity();},null,null,component.priority);});};fluid.priorityForComponent=function(component){return component.priority?component.priority:(component.type==="fluid.typeFount"||fluid.hasGrade(fluid.defaults(component.type),"fluid.typeFount"))?"first":undefined;};fluid.initDependents=function(that){fluid.pushActivity("initDependents","instantiating dependent components for component %that",{that:that});var shadow=fluid.shadowForComponent(that);shadow.memberStrategy.initter();var options=that.options;var components=options.components||{};var componentSort={};fluid.each(components,function(component,name){if(!component.createOnEvent){var priority=fluid.priorityForComponent(component);componentSort[name]={key:name,priority:fluid.event.mapPriority(priority,0)};}
else{fluid.bindDeferredComponent(that,name,component);}});var componentList=fluid.event.sortListeners(componentSort);fluid.each(componentList,function(entry){fluid.initDependent(that,entry.key);});shadow.invokerStrategy.initter();fluid.popActivity();};var dependentStore={};function searchDemands(demandingName,contextNames){var exist=dependentStore[demandingName]||[];outer:for(var i=0;i<exist.length;++i){var rec=exist[i];for(var j=0;j<contextNames.length;++j){if(rec.contexts[j]!==contextNames[j]){continue outer;}}
return rec.spec;}}
var isDemandLogging=false;fluid.setDemandLogging=function(set){isDemandLogging=set;};fluid.isDemandLogging=function(demandingNames){return isDemandLogging&&fluid.isLogging();};fluid.demands=function(demandingName,contextName,spec){var contextNames=fluid.makeArray(contextName).sort();if(!spec){return searchDemands(demandingName,contextNames);}
else if(spec.length){spec={args:spec};}
if(fluid.getCallerInfo&&fluid.isDemandLogging()){var callerInfo=fluid.getCallerInfo(5);if(callerInfo){spec.registeredFrom=callerInfo;}}
spec.demandId=fluid.allocateGuid();var exist=dependentStore[demandingName];if(!exist){exist=[];dependentStore[demandingName]=exist;}
exist.push({contexts:contextNames,spec:spec});};fluid.compareDemands=function(speca,specb){return specb.intersect-speca.intersect;};fluid.locateAllDemands=function(parentThat,demandingNames){var demandLogging=fluid.isDemandLogging(demandingNames);if(demandLogging){fluid.log("Resolving demands for function names ",demandingNames," in context of "+
(parentThat?"component "+parentThat.typeName:"no component"));}
var contextNames={};var visited=[];var instantiator=fluid.getInstantiator(parentThat);var thatStack=instantiator.getFullStack(parentThat);visitComponents(instantiator,thatStack,function(component,xname,path,xpath,depth){contextNames[component.typeName]=depth;var gradeNames=fluid.makeArray(fluid.get(component,["options","gradeNames"]));fluid.each(gradeNames,function(gradeName){contextNames[gradeName]=depth;});visited.push(component);});if(demandLogging){fluid.log("Components in scope for resolution:\n"+fluid.dumpThatStack(visited,instantiator));}
var matches=[];for(var i=0;i<demandingNames.length;++i){var rec=dependentStore[demandingNames[i]]||[];for(var j=0;j<rec.length;++j){var spec=rec[j];var horizonLevel=spec.spec.horizon?contextNames[spec.spec.horizon]:-1;var record={spec:spec,intersect:0,uncess:0};for(var k=0;k<spec.contexts.length;++k){var depth=contextNames[spec.contexts[k]];record[depth!==undefined&&depth>=horizonLevel?"intersect":"uncess"]+=2;}
if(spec.contexts.length===0){record.intersect++;}
if(record.uncess===0){matches.push(record);}}}
matches.sort(fluid.compareDemands);return matches;};fluid.getMembers=function(holder,name){return fluid.transform(holder,function(member){return fluid.get(member,name);});};fluid.locateDemands=function(parentThat,demandingNames){var matches=fluid.locateAllDemands(parentThat,demandingNames);var demandspec=fluid.getMembers(matches,["spec","spec"]);if(fluid.isDemandLogging(demandingNames)){if(demandspec.length){fluid.log("Located "+matches.length+" potential match"+(matches.length===1?"":"es")+", selected best match with "+matches[0].intersect
+" matched context names: ",demandspec);}
else{fluid.log("No matches found for demands, using direct implementation");}}
return demandspec;};fluid.determineDemands=function(parentThat,funcNames){funcNames=fluid.makeArray(funcNames);var newFuncName=funcNames[0];var demandspec=fluid.locateDemands(parentThat,funcNames);if(demandspec.length&&demandspec[0].funcName){newFuncName=demandspec[0].funcName;}
return $.extend(true,{funcName:newFuncName,args:demandspec[0]?fluid.makeArray(demandspec[0].args):[],backSpecs:demandspec.slice(1)},fluid.censorKeys(demandspec[0],["funcName","args"]));};fluid.resolveDemands=function(parentThat,funcNames,initArgs,options){var demandspec=fluid.determineDemands(parentThat,funcNames);return fluid.embodyDemands(parentThat,demandspec,initArgs,options);};fluid.recordToApplicable=function(record,that){var recthis=record["this"];if(record.method^recthis){fluid.fail("Record ",that," must contain both entries \"method\" and \"this\" if it contains either");}
if(!record.method){return null;}
return{apply:function(noThis,args){var resolvedThis=fluid.expandOptions(recthis,that);if(!resolvedThis){fluid.fail("Could not resolve reference "+recthis+" to a value");}
var resolvedFunc=resolvedThis[record.method];if(typeof(resolvedFunc)!=="function"){fluid.fail("Object ",resolvedThis," at reference "+recthis+" has no member named "+record.method+" which is a function ");}
fluid.log("Applying arguments ",args," to method "+record.method+" of instance ",resolvedThis);return resolvedFunc.apply(resolvedThis,args);}};};fluid.invoke=function(functionName,args,that,environment){fluid.pushActivity("invokeFunc","invoking function with name \"%functionName\" from component %that",{functionName:functionName,that:that});var invokeSpec=fluid.resolveDemands(that,functionName,fluid.makeArray(args),{passArgs:true});var togo=fluid.invokeGlobalFunction(invokeSpec.funcName,invokeSpec.args,environment);fluid.popActivity();return togo;};fluid.makeFreeInvoker=function(functionName,environment){var demandSpec=fluid.determineDemands(null,functionName);return function(){var invokeSpec=fluid.embodyDemands(null,demandSpec,fluid.makeArray(arguments),{passArgs:true});return fluid.invokeGlobalFunction(invokeSpec.funcName,invokeSpec.args,environment);};};fluid.makeInvoker=function(that,invokerec,name,environment){var functionName;if(typeof(invokerec)==="string"){if(invokerec.charAt(0)==="{"){invokerec={func:invokerec};}else{functionName=invokerec;}}
var demandspec=functionName?fluid.determineDemands(that,functionName):invokerec;return function(){fluid.pushActivity("invokeInvoker","invoking invoker with name %name and record %record from component %that",{name:name,record:invokerec,that:that});var func=fluid.recordToApplicable(invokerec,that);var args=fluid.makeArray(arguments);var invokeSpec=fluid.embodyDemands(that,demandspec,args,{passArgs:true});func=func||(invokeSpec.funcName?fluid.getGlobalValue(invokeSpec.funcName,environment):fluid.expandOptions(demandspec.func,that));if(!func){fluid.fail("Error in invoker record: could not resolve members func, funcName or method to a function implementation",demandspec);}
var togo=func.apply(null,invokeSpec.args);fluid.popActivity();return togo;};};fluid.event.makeTrackedListenerAdder=function(source){var instantiator=idToInstantiator[source.id];return function(event){return{addListener:function(listener){instantiator.recordListener(event,listener,source);event.addListener.apply(null,arguments);}}};};fluid.event.listenerEngine=function(eventSpec,callback,adder){var argstruc={};function checkFire(){var notall=fluid.find(eventSpec,function(value,key){if(argstruc[key]===undefined){return true;}});if(!notall){callback(argstruc);fluid.clear(argstruc);}}
fluid.each(eventSpec,function(event,eventName){adder(event).addListener(function(){argstruc[eventName]=fluid.makeArray(arguments);checkFire();});});};fluid.event.dispatchListener=function(that,listener,eventName,eventSpec,indirectArgs){return function(){fluid.pushActivity("dispatchListener","firing to listener to event named %eventName of component %that",{eventName:eventName,that:that});if(typeof(listener)==="string"){listener=fluid.event.resolveListener({globalName:listener});}
var args=indirectArgs?arguments[0]:fluid.makeArray(arguments);var demandspec=fluid.determineDemands(that,eventName);if(demandspec.args.length===0&&eventSpec.args){demandspec.args=eventSpec.args;}
var resolved=fluid.embodyDemands(that,demandspec,args,{passArgs:true});var togo=listener.apply(null,resolved.args);fluid.popActivity();return togo;};};fluid.event.resolveListenerRecord=function(lisrec,that,eventName){var badRec=function(record,extra){fluid.fail("Error in listener record - could not resolve reference ",record," to a listener or firer. "
+"Did you miss out \"events.\" when referring to an event firer?"+extra);};fluid.pushActivity("resolveListenerRecord","resolving listener record for event named %eventName for component %that",{eventName:eventName,that:that});var records=fluid.makeArray(lisrec);var transRecs=fluid.transform(records,function(record){var expanded=fluid.isPrimitive(record)||record.expander?{listener:record}:record;var methodist=fluid.recordToApplicable(record,that);if(methodist){expanded.listener=methodist;}
else{expanded.listener=expanded.listener||expanded.func||expanded.funcName;}
if(!expanded.listener){badRec(record," Listener record must contain a member named \"listener\" or \"method\"");}
var listener=expanded.listener=fluid.expandOptions(expanded.listener,that);if(!listener){badRec(record,"");}
var firer;if(listener.typeName==="fluid.event.firer"){listener=listener.fire;firer=true;}
expanded.listener=expanded.args||firer?fluid.event.dispatchListener(that,listener,eventName,expanded):listener;return expanded;});var togo={records:transRecs,adderWrapper:fluid.event.makeTrackedListenerAdder(that)};fluid.popActivity();return togo;};fluid.event.expandOneEvent=function(event,that){var origin;if(typeof(event)==="string"&&event.charAt(0)!=="{"){origin=fluid.getForComponent(that,["events",event]);}
else{origin=fluid.expandOptions(event,that);}
if(!origin||origin.typeName!=="fluid.event.firer"){fluid.fail("Error in event specification - could not resolve base event reference ",event," to an event firer: got ",origin);}
return origin;};fluid.event.expandEvents=function(event,that){return typeof(event)==="string"?fluid.event.expandOneEvent(event,that):fluid.transform(event,function(oneEvent){return fluid.event.expandOneEvent(oneEvent,that);});};fluid.event.resolveEvent=function(that,eventName,eventSpec){fluid.pushActivity("resolveEvent","resolving event with name %eventName attached to component %that",{eventName:eventName,that:that});var adder=fluid.event.makeTrackedListenerAdder(that);if(typeof(eventSpec)==="string"){eventSpec={event:eventSpec};}
var event=eventSpec.event||eventSpec.events;if(!event){fluid.fail("Event specification for event with name "+eventName+" does not include a base event specification: ",eventSpec);}
var origin=fluid.event.expandEvents(event,that);var isMultiple=origin.typeName!=="fluid.event.firer";var isComposite=eventSpec.args||isMultiple;var firer;if(isComposite){firer=fluid.event.getEventFirer(null,null," [composite] "+fluid.event.nameEvent(that,eventName));var dispatcher=fluid.event.dispatchListener(that,firer.fire,eventName,eventSpec,isMultiple);if(isMultiple){fluid.event.listenerEngine(origin,dispatcher,adder);}
else{adder(origin).addListener(dispatcher);}}
else{firer={typeName:"fluid.event.firer"};firer.fire=function(){var outerArgs=fluid.makeArray(arguments);fluid.pushActivity("fireSynthetic","firing synthetic event %eventName ",{eventName:eventName});var togo=origin.fire.apply(null,outerArgs);fluid.popActivity();return togo;};firer.addListener=function(listener,namespace,predicate,priority){var dispatcher=fluid.event.dispatchListener(that,listener,eventName,eventSpec);adder(origin).addListener(dispatcher,namespace,predicate,priority);};firer.removeListener=function(listener){origin.removeListener(listener);};}
fluid.popActivity();return firer;};fluid.withEnvironment=function(envAdd,func,root){root=root||fluid.globalThreadLocal();return fluid.tryCatch(function(){for(var key in envAdd){root[key]=envAdd[key];}
$.extend(root,envAdd);return func();},null,function(){for(var key in envAdd){delete root[key];}});};fluid.fetchContextReference=function(parsed,directModel,env,elResolver,externalFetcher){if(elResolver){parsed=elResolver(parsed,env);}
var base=parsed.context?env[parsed.context]:directModel;if(!base){var resolveExternal=externalFetcher&&externalFetcher(parsed);return resolveExternal||base;}
return parsed.noDereference?parsed.path:fluid.get(base,parsed.path);};fluid.makeEnvironmentFetcher=function(directModel,elResolver,envGetter,externalFetcher){envGetter=envGetter||fluid.globalThreadLocal;return function(parsed){var env=envGetter();return fluid.fetchContextReference(parsed,directModel,env,elResolver,externalFetcher);};};fluid.extractEL=function(string,options){if(options.ELstyle==="ALL"){return string;}
else if(options.ELstyle.length===1){if(string.charAt(0)===options.ELstyle){return string.substring(1);}}
else if(options.ELstyle==="${}"){var i1=string.indexOf("${");var i2=string.lastIndexOf("}");if(i1===0&&i2!==-1){return string.substring(2,i2);}}};fluid.extractELWithContext=function(string,options){var EL=fluid.extractEL(string,options);if(EL&&EL.charAt(0)==="{"){return fluid.parseContextReference(EL);}
return EL?{path:EL}:EL;};fluid.parseContextReference=function(reference,index,delimiter){index=index||0;var endcpos=reference.indexOf("}",index+1);if(endcpos===-1){fluid.fail("Cannot parse context reference \""+reference+"\": Malformed context reference without }");}
var context=reference.substring(index+1,endcpos);var endpos=delimiter?reference.indexOf(delimiter,endcpos+1):reference.length;var path=reference.substring(endcpos+1,endpos);if(path.charAt(0)==="."){path=path.substring(1);}
return{context:context,path:path,endpos:endpos};};fluid.renderContextReference=function(parsed){return"{"+parsed.context+"}."+parsed.path;};fluid.resolveContextValue=function(string,options){function fetch(parsed){fluid.pushActivity("resolveContextValue","resolving context value %string",{string:string});var togo=options.fetcher(parsed);fluid.pushActivity("resolvedContextValue","resolved value %string to value %value",{string:string,value:togo});fluid.popActivity(2);return togo;}
if(options.bareContextRefs&&string.charAt(0)==="{"){var parsed=fluid.parseContextReference(string);return fetch(parsed);}
else if(options.ELstyle&&options.ELstyle!=="${}"){var parsed=fluid.extractELWithContext(string,options);if(parsed){return fetch(parsed);}}
while(typeof(string)==="string"){var i1=string.indexOf("${");var i2=string.indexOf("}",i1+2);if(i1!==-1&&i2!==-1){var parsed;if(string.charAt(i1+2)==="{"){parsed=fluid.parseContextReference(string,i1+2,"}");i2=parsed.endpos;}
else{parsed={path:string.substring(i1+2,i2)};}
var subs=fetch(parsed);var all=(i1===0&&i2===string.length-1);if(subs===undefined||subs===null){return subs;}
string=all?subs:string.substring(0,i1)+subs+string.substring(i2+1);}
else{break;}}
return string;};fluid.expandExpander=function(target,source,options){var expander=fluid.getGlobalValue(source.expander.type||"fluid.deferredInvokeCall");if(expander){return expander.call(null,target,source,options);}};fluid.fetchExpandChildren=function(target,source,mergePolicy,miniWorld,options){if(source.expander){var expanded=fluid.expandExpander(target,source,options);if(fluid.isPrimitive(expanded)||(fluid.isArrayable(expanded)^fluid.isArrayable(target))){return expanded;}
else{$.extend(true,target,expanded);}}
fluid.each(source,function(newSource,key){if(newSource===undefined){target[key]=undefined;}
else{options.strategy(target,key,null,null,source,mergePolicy,miniWorld);}});return target;};function regenerateCursor(source,segs,limit,sourceStrategy){for(var i=0;i<limit;++i){source=sourceStrategy(source,segs[i],i,segs);}
return source;}
fluid.isUnexpandable=function(source){return fluid.isPrimitive(source)||source.nodeType!==undefined||source.jquery;};fluid.guardCircularity=function(seenIds,source,message1,message2){if(source&&source.id){if(!seenIds[source.id]){seenIds[source.id]=source;}else if(seenIds[source.id]===source){fluid.fail("Circularity in options "+message1+" - "+fluid.nameComponent(source)
+" has already been seen"+message2);}}};fluid.expandSource=function(options,target,deliverer,source,policy,miniWorld,recurse){var expanded,isTrunk,isLate;var thisPolicy=fluid.derefMergePolicy(policy);fluid.guardCircularity(options.seenIds,source,"expansion"," - please ensure options are not circularly connected, or protect from expansion using the \"noexpand\" policy or expander");if(typeof(source)==="string"&&!thisPolicy.noexpand){expanded=fluid.resolveContextValue(source,options);}
else if(thisPolicy.noexpand||fluid.isUnexpandable(source)){expanded=source;}
else if(source.expander){expanded=fluid.expandExpander(deliverer,source,options);}
else{if(thisPolicy.preserve){expanded=source;isLate=true;}
else{expanded=fluid.freshContainer(source);}
isTrunk=true;}
if(!isLate&&expanded!==fluid.NO_VALUE){deliverer(expanded);}
if(isTrunk){recurse(expanded,source,policy,miniWorld||isLate);}
if(isLate&&expanded!==fluid.NO_VALUE){deliverer(expanded);}
return expanded;};fluid.makeExpandStrategy=function(options){var recurse=function(target,source,policy,miniWorld){return fluid.fetchExpandChildren(target,source,policy,miniWorld,options);};var strategy=function(target,name,i,segs,source,policy,miniWorld){if(!target){return;}
if(!miniWorld&&target.hasOwnProperty(name)){return target[name];}
if(name==="expander"&&source&&source.expander.type){return;}
if(source===undefined){source=regenerateCursor(options.source,segs,i-1,options.sourceStrategy);policy=regenerateCursor(options.mergePolicy,segs,i-1,fluid.concreteTrundler);}
var thisSource=options.sourceStrategy(source,name,i,segs);var thisPolicy=fluid.concreteTrundler(policy,name);function deliverer(value){target[name]=value;}
return fluid.expandSource(options,target,deliverer,thisSource,thisPolicy,miniWorld,recurse);};options.recurse=recurse;options.strategy=strategy;return strategy;};fluid.defaults("fluid.makeExpandOptions",{ELstyle:"${}",bareContextRefs:true,target:fluid.inCreationMarker});fluid.makeExpandOptions=function(source,options){options=$.extend({},fluid.rawDefaults("fluid.makeExpandOptions"),options);options.expandSource=function(source){return fluid.expandSource(options,null,fluid.identity,source,options.mergePolicy,false);};if(!fluid.isUnexpandable(source)){options.source=source;options.seenIds={};options.target=fluid.freshContainer(source);options.sourceStrategy=options.sourceStrategy||fluid.concreteTrundler;fluid.makeExpandStrategy(options);options.initter=function(){options.target=fluid.fetchExpandChildren(options.target,options.source,options.mergePolicy,false,options);};}
else{options.strategy=fluid.concreteTrundler;options.initter=fluid.identity;if(typeof(source)==="string"){options.target=options.expandSource(source);}
else{options.target=source;}}
return options;};fluid.expand=function(source,options){var expandOptions=fluid.makeExpandOptions(source,options);expandOptions.initter();return expandOptions.target;};fluid.registerNamespace("fluid.expander");fluid.expander.deferredCall=function(deliverer,source,options){var expander=source.expander;var args=(!expander.args||fluid.isArrayable(expander.args))?expander.args:fluid.makeArray(expander.args);args=options.recurse([],args);return fluid.invokeGlobalFunction(expander.func,args);};fluid.deferredCall=fluid.expander.deferredCall;fluid.deferredInvokeCall=function(deliverer,source,options){var expander=source.expander;var args=fluid.makeArray(expander.args);args=options.recurse([],args);var funcEntry=expander.func||expander.funcName;var func=options.expandSource(funcEntry)||fluid.recordToApplicable(expander,options.contextThat);if(!func){fluid.fail("Error in expander record - "+funcEntry+" could not be resolved to a function for component ",options.contextThat);}
return func.apply?func.apply(null,args):fluid.invoke(func,args,options.contextThat);};fluid.expander.noexpand=function(deliverer,source){return source.expander.value?source.expander.value:source.expander.tree;};fluid.noexpand=fluid.expander.noexpand;})(jQuery,fluid_1_5);var fluid_1_5=fluid_1_5||{};(function($,fluid){var resourceCache={};var pendingClass={};fluid.fetchResources=function(resourceSpecs,callback,options){var that=fluid.initLittleComponent("fluid.fetchResources",options);that.resourceSpecs=resourceSpecs;that.callback=callback;that.operate=function(){fluid.fetchResources.fetchResourcesImpl(that);};fluid.each(resourceSpecs,function(resourceSpec,key){resourceSpec.recurseFirer=fluid.event.getEventFirer(null,null,"I/O completion for resource \""+key+"\"");resourceSpec.recurseFirer.addListener(that.operate);if(resourceSpec.url&&!resourceSpec.href){resourceSpec.href=resourceSpec.url;}});if(that.options.amalgamateClasses){fluid.fetchResources.amalgamateClasses(resourceSpecs,that.options.amalgamateClasses,that.operate);}
that.operate();return that;};fluid.fetchResources.amalgamateClasses=function(specs,classes,operator){fluid.each(classes,function(clazz){var pending=pendingClass[clazz];fluid.each(pending,function(pendingrec,canon){specs[clazz+"!"+canon]=pendingrec;pendingrec.recurseFirer.addListener(operator);});});};fluid.fetchResources.timeSuccessCallback=function(resourceSpec){if(resourceSpec.timeSuccess&&resourceSpec.options&&resourceSpec.options.success){var success=resourceSpec.options.success;resourceSpec.options.success=function(){var startTime=new Date();var ret=success.apply(null,arguments);fluid.log("External callback for URL "+resourceSpec.href+" completed - callback time: "+
(new Date().getTime()-startTime.getTime())+"ms");return ret;};}};function canonUrl(url){return url;}
fluid.fetchResources.clearResourceCache=function(url){if(url){delete resourceCache[canonUrl(url)];}
else{fluid.clear(resourceCache);}};fluid.fetchResources.handleCachedRequest=function(resourceSpec,response){var canon=canonUrl(resourceSpec.href);var cached=resourceCache[canon];if(cached.$$firer$$){fluid.log("Handling request for "+canon+" from cache");var fetchClass=resourceSpec.fetchClass;if(fetchClass&&pendingClass[fetchClass]){fluid.log("Clearing pendingClass entry for class "+fetchClass);delete pendingClass[fetchClass][canon];}
resourceCache[canon]=response;cached.fire(response);}};fluid.fetchResources.completeRequest=function(thisSpec,recurseCall){thisSpec.queued=false;thisSpec.completeTime=new Date();fluid.log("Request to URL "+thisSpec.href+" completed - total elapsed time: "+
(thisSpec.completeTime.getTime()-thisSpec.initTime.getTime())+"ms");thisSpec.recurseFirer.fire();};fluid.fetchResources.makeResourceCallback=function(thisSpec){return{success:function(response){thisSpec.resourceText=response;thisSpec.resourceKey=thisSpec.href;if(thisSpec.forceCache){fluid.fetchResources.handleCachedRequest(thisSpec,response);}
fluid.fetchResources.completeRequest(thisSpec);},error:function(response,textStatus,errorThrown){thisSpec.fetchError={status:response.status,textStatus:response.textStatus,errorThrown:errorThrown};fluid.fetchResources.completeRequest(thisSpec);}};};fluid.fetchResources.issueCachedRequest=function(resourceSpec,options){var canon=canonUrl(resourceSpec.href);var cached=resourceCache[canon];if(!cached){fluid.log("First request for cached resource with url "+canon);cached=fluid.event.getEventFirer(null,null,"cache notifier for resource URL "+canon);cached.$$firer$$=true;resourceCache[canon]=cached;var fetchClass=resourceSpec.fetchClass;if(fetchClass){if(!pendingClass[fetchClass]){pendingClass[fetchClass]={};}
pendingClass[fetchClass][canon]=resourceSpec;}
options.cache=false;$.ajax(options);}
else{if(!cached.$$firer$$){options.success(cached);}
else{fluid.log("Request for cached resource which is in flight: url "+canon);cached.addListener(function(response){options.success(response);});}}};fluid.fetchResources.composeCallbacks=function(internal,external){return external?(internal?function(){try{external.apply(null,arguments);}
catch(e){fluid.log("Exception applying external fetchResources callback: "+e);}
internal.apply(null,arguments);}:external):internal;};fluid.fetchResources.composePolicy=function(target,source,key){return fluid.fetchResources.composeCallbacks(target,source);};fluid.defaults("fluid.fetchResources.issueRequest",{mergePolicy:{success:fluid.fetchResources.composePolicy,error:fluid.fetchResources.composePolicy,url:"reverse"}});fluid.fetchResources.issueRequest=function(resourceSpec,key){var thisCallback=fluid.fetchResources.makeResourceCallback(resourceSpec);var options={url:resourceSpec.href,success:thisCallback.success,error:thisCallback.error,dataType:"text"};fluid.fetchResources.timeSuccessCallback(resourceSpec);options=fluid.merge(fluid.defaults("fluid.fetchResources.issueRequest").mergePolicy,options,resourceSpec.options);resourceSpec.queued=true;resourceSpec.initTime=new Date();fluid.log("Request with key "+key+" queued for "+resourceSpec.href);if(resourceSpec.forceCache){fluid.fetchResources.issueCachedRequest(resourceSpec,options);}
else{$.ajax(options);}};fluid.fetchResources.fetchResourcesImpl=function(that){var complete=true;var allSync=true;var resourceSpecs=that.resourceSpecs;for(var key in resourceSpecs){var resourceSpec=resourceSpecs[key];if(!resourceSpec.options||resourceSpec.options.async){allSync=false;}
if(resourceSpec.href&&!resourceSpec.completeTime){if(!resourceSpec.queued){fluid.fetchResources.issueRequest(resourceSpec,key);}
if(resourceSpec.queued){complete=false;}}
else if(resourceSpec.nodeId&&!resourceSpec.resourceText){var node=document.getElementById(resourceSpec.nodeId);resourceSpec.resourceText=fluid.dom.getElementText(node);resourceSpec.resourceKey=resourceSpec.nodeId;}}
if(complete&&that.callback&&!that.callbackCalled){that.callbackCalled=true;if($.browser.mozilla&&!allSync){setTimeout(function(){that.callback(resourceSpecs);},1);}
else{that.callback(resourceSpecs);}}};fluid.fetchResources.primeCacheFromResources=function(componentName){var resources=fluid.defaults(componentName).resources;var expanded=(fluid.expandOptions?fluid.expandOptions:fluid.identity)(fluid.copy(resources));fluid.fetchResources(expanded);};fluid.registerNamespace("fluid.expander");fluid.expander.makeDefaultFetchOptions=function(successdisposer,failid,options){return $.extend(true,{dataType:"text"},options,{success:function(response,environmentdisposer){var json=JSON.parse(response);environmentdisposer(successdisposer(json));},error:function(response,textStatus){fluid.log("Error fetching "+failid+": "+textStatus);}});};fluid.expander.makeFetchExpander=function(options){return{expander:{type:"fluid.expander.deferredFetcher",href:options.url,options:fluid.expander.makeDefaultFetchOptions(options.disposer,options.url,options.options),resourceSpecCollector:"{resourceSpecCollector}",fetchKey:options.fetchKey}};};fluid.expander.deferredFetcher=function(deliverer,source,expandOptions){var expander=source.expander;var spec=fluid.copy(expander);var collector=fluid.expand(expander.resourceSpecCollector,expandOptions);delete spec.type;delete spec.resourceSpecCollector;delete spec.fetchKey;var environmentdisposer=function(disposed){deliverer(disposed);};spec.options.success=function(response){expander.options.success(response,environmentdisposer);};var key=expander.fetchKey||fluid.allocateGuid();collector[key]=spec;return fluid.NO_VALUE;};})(jQuery,fluid_1_5);